// +build legacy_os

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: /tmp/tmp.ULOIz0pFc3/_build/wrappers/go/wrapper.i

package cryptocgo

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;



#cgo CPPFLAGS: -I${SRCDIR}/pkg/linux_amd64__legacy_os/include
#cgo LDFLAGS: -L${SRCDIR}/pkg/linux_amd64__legacy_os/lib -lvirgil_crypto_go -lvirgil_crypto -lmbedcrypto -led25519 -lstdc++


#cgo LDFLAGS: -lm


#cgo LDFLAGS: -lpythia -lrelic_s

typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef _gostring_ swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef _gostring_ swig_type_11;
typedef _gostring_ swig_type_12;
typedef _gostring_ swig_type_13;
extern void _wrap_Swig_free_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_virgil_crypto_go_24e8eb615c27a4af(swig_intgo arg1);
extern uintptr_t _wrap_new_VirgilByteArray__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_new_VirgilByteArray__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(swig_intgo arg1);
extern uintptr_t _wrap_new_VirgilByteArray__SWIG_2_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern swig_intgo _wrap_VirgilByteArray_size_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern swig_intgo _wrap_VirgilByteArray_capacity_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilByteArray_reserve_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, swig_intgo arg2);
extern _Bool _wrap_VirgilByteArray_isEmpty_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilByteArray_clear_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilByteArray_add_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, char arg2);
extern char _wrap_VirgilByteArray_get_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_VirgilByteArray_set_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, swig_intgo arg2, char arg3);
extern void _wrap_delete_VirgilByteArray_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern swig_intgo _wrap_VirgilVersion_asNumber_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_type_1 _wrap_VirgilVersion_asString_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_VirgilVersion_majorVersion_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_VirgilVersion_minorVersion_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_VirgilVersion_patchVersion_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_type_2 _wrap_VirgilVersion_fullName_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_new_VirgilVersion_virgil_crypto_go_24e8eb615c27a4af(void);
extern void _wrap_delete_VirgilVersion_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap__swig_NewDirectorVirgilDataSourceVirgilDataSource_virgil_crypto_go_24e8eb615c27a4af(int);
extern void _wrap_DeleteDirectorVirgilDataSource_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern _Bool _wrap_VirgilDataSource_hasData_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilDataSource_read_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilDataSource_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap__swig_NewDirectorVirgilDataSinkVirgilDataSink_virgil_crypto_go_24e8eb615c27a4af(int);
extern void _wrap_DeleteDirectorVirgilDataSink_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern _Bool _wrap_VirgilDataSink_isGood_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilDataSink_write_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_VirgilDataSink_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilAsn1Compatible_toAsn1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilAsn1Compatible_fromAsn1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_VirgilAsn1Compatible_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern swig_intgo _wrap_Type_RSA_256_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_RSA_512_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_RSA_1024_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_RSA_2048_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_RSA_3072_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_RSA_4096_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_RSA_8192_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_EC_SECP192R1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_EC_SECP224R1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_EC_SECP256R1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_EC_SECP384R1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_EC_SECP521R1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_EC_BP256R1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_EC_BP384R1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_EC_BP512R1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_EC_SECP192K1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_EC_SECP224K1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_EC_SECP256K1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_EC_CURVE25519_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_FAST_EC_X25519_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Type_FAST_EC_ED25519_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_VirgilKeyPair_generate__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(swig_intgo arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilKeyPair_generate__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(swig_intgo arg1);
extern uintptr_t _wrap_VirgilKeyPair_generateRecommended__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilKeyPair_generateRecommended__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_VirgilKeyPair_generateFrom__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilKeyPair_generateFrom__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilKeyPair_generateFrom__SWIG_2_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilKeyPair_generateFromKeyMaterial__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(swig_intgo arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilKeyPair_generateFromKeyMaterial__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(swig_intgo arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilKeyPair_generateRecommendedFromKeyMaterial__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilKeyPair_generateRecommendedFromKeyMaterial__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern _Bool _wrap_VirgilKeyPair_isKeyPairMatch__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern _Bool _wrap_VirgilKeyPair_isKeyPairMatch__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_VirgilKeyPair_checkPrivateKeyPassword_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_VirgilKeyPair_isPrivateKeyEncrypted_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilKeyPair_resetPrivateKeyPassword_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilKeyPair_encryptPrivateKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilKeyPair_decryptPrivateKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilKeyPair_extractPublicKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilKeyPair_publicKeyToPEM_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilKeyPair_publicKeyToDER_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilKeyPair_privateKeyToPEM__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilKeyPair_privateKeyToPEM__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilKeyPair_privateKeyToDER__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilKeyPair_privateKeyToDER__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilKeyPair__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilKeyPair_publicKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilKeyPair_privateKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilKeyPair__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern swig_intgo _wrap_Algorithm_MD5_VirgilHash_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Algorithm_SHA1_VirgilHash_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Algorithm_SHA224_VirgilHash_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Algorithm_SHA256_VirgilHash_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Algorithm_SHA384_VirgilHash_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Algorithm_SHA512_VirgilHash_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_new_VirgilHash__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_new_VirgilHash__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(swig_intgo arg1);
extern uintptr_t _wrap_new_VirgilHash__SWIG_2_virgil_crypto_go_24e8eb615c27a4af(swig_type_3 arg1);
extern swig_type_4 _wrap_VirgilHash_name_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern swig_intgo _wrap_VirgilHash_algorithm_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern swig_intgo _wrap_VirgilHash_Xtype_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern swig_intgo _wrap_VirgilHash_size_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilHash_hash_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_VirgilHash_start_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilHash_update_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilHash_finish_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilHash_hmac_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_VirgilHash_hmacStart_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_VirgilHash_hmacReset_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilHash_hmacUpdate_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilHash_hmacFinish_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilHash_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilHash__SWIG_3_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilHash_toAsn1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern void _wrap_VirgilHash_fromAsn1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern swig_type_5 _wrap_VirgilBase64_encode_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilBase64_decode_virgil_crypto_go_24e8eb615c27a4af(swig_type_6 arg1);
extern void _wrap_delete_VirgilBase64_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern swig_intgo _wrap_VirgilPBKDF_kIterationCount_Default_VirgilPBKDF_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_Algorithm_PBKDF2_VirgilPBKDF_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_new_VirgilPBKDF__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_new_VirgilPBKDF__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_new_VirgilPBKDF__SWIG_2_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPBKDF_getSalt_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern swig_intgo _wrap_VirgilPBKDF_getIterationCount_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilPBKDF_setAlgorithm_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_VirgilPBKDF_getAlgorithm_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilPBKDF_setHashAlgorithm_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_VirgilPBKDF_getHashAlgorithm_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilPBKDF_enableRecommendationsCheck_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilPBKDF_disableRecommendationsCheck_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPBKDF_derive__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_VirgilPBKDF_derive__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_VirgilPBKDF_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPBKDF_toAsn1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern void _wrap_VirgilPBKDF_fromAsn1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilRandom__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(swig_type_7 arg1);
extern uintptr_t _wrap_VirgilRandom_randomize__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_VirgilRandom_randomize__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern swig_intgo _wrap_VirgilRandom_randomize__SWIG_2_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern void _wrap_delete_VirgilRandom_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilRandom__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern _Bool _wrap_VirgilConfig_hasFeatureStreamImpl_virgil_crypto_go_24e8eb615c27a4af(void);
extern _Bool _wrap_VirgilConfig_hasFeaturePythiaImpl_virgil_crypto_go_24e8eb615c27a4af(void);
extern _Bool _wrap_VirgilConfig_hasFeaturePythiaMultiThread_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_new_VirgilConfig_virgil_crypto_go_24e8eb615c27a4af(void);
extern void _wrap_delete_VirgilConfig_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern _Bool _wrap_VirgilCustomParams_isEmpty_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilCustomParams_setInteger_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_VirgilCustomParams_getInteger_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_VirgilCustomParams_removeInteger_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_VirgilCustomParams_setString_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilCustomParams_getString_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_VirgilCustomParams_removeString_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_VirgilCustomParams_setData_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilCustomParams_getData_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_VirgilCustomParams_removeData_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_VirgilCustomParams_clear_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilCustomParams__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_new_VirgilCustomParams__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilCustomParams_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilCustomParams_toAsn1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern void _wrap_VirgilCustomParams_fromAsn1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilCipherBase_virgil_crypto_go_24e8eb615c27a4af(void);
extern void _wrap_VirgilCipherBase_addKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_VirgilCipherBase_removeKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_VirgilCipherBase_keyRecipientExists_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_VirgilCipherBase_addPasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_VirgilCipherBase_removePasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_VirgilCipherBase_passwordRecipientExists_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_VirgilCipherBase_removeAllRecipients_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilCipherBase_getContentInfo_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilCipherBase_setContentInfo_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_VirgilCipherBase_defineContentInfoSize_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilCipherBase_customParams__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilCipherBase_customParams__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilCipherBase_computeShared__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilCipherBase_computeShared__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_VirgilCipherBase_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilCipher_encrypt__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern uintptr_t _wrap_VirgilCipher_encrypt__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilCipher_decryptWithKey__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_VirgilCipher_decryptWithKey__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_VirgilCipher_decryptWithPassword_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_new_VirgilCipher_virgil_crypto_go_24e8eb615c27a4af(void);
extern void _wrap_delete_VirgilCipher_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilCipher_addKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_VirgilCipher_removeKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_VirgilCipher_keyRecipientExists_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_VirgilCipher_addPasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_VirgilCipher_removePasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_VirgilCipher_passwordRecipientExists_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_VirgilCipher_removeAllRecipients_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern uintptr_t _wrap_VirgilCipher_getContentInfo_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern void _wrap_VirgilCipher_setContentInfo_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern swig_intgo _wrap_VirgilCipher_defineContentInfoSize_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilCipher_customParams__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern uintptr_t _wrap_VirgilCipher_customParams__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern uintptr_t _wrap_VirgilCipher_computeShared__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilCipher_computeShared__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_VirgilChunkCipher_kPreferredChunkSize_VirgilChunkCipher_virgil_crypto_go_24e8eb615c27a4af(void);
extern void _wrap_VirgilChunkCipher_encrypt__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4, swig_intgo arg5);
extern void _wrap_VirgilChunkCipher_encrypt__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4);
extern void _wrap_VirgilChunkCipher_encrypt__SWIG_2_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_VirgilChunkCipher_decryptWithKey__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6);
extern void _wrap_VirgilChunkCipher_decryptWithKey__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern void _wrap_VirgilChunkCipher_decryptWithPassword_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_new_VirgilChunkCipher_virgil_crypto_go_24e8eb615c27a4af(void);
extern void _wrap_delete_VirgilChunkCipher_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilChunkCipher_addKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_VirgilChunkCipher_removeKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_VirgilChunkCipher_keyRecipientExists_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_VirgilChunkCipher_addPasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_VirgilChunkCipher_removePasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_VirgilChunkCipher_passwordRecipientExists_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_VirgilChunkCipher_removeAllRecipients_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern uintptr_t _wrap_VirgilChunkCipher_getContentInfo_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern void _wrap_VirgilChunkCipher_setContentInfo_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern swig_intgo _wrap_VirgilChunkCipher_defineContentInfoSize_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilChunkCipher_customParams__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern uintptr_t _wrap_VirgilChunkCipher_customParams__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern uintptr_t _wrap_VirgilChunkCipher_computeShared__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilChunkCipher_computeShared__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilSeqCipher_startEncryption_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilSeqCipher_startDecryptionWithKey__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_VirgilSeqCipher_startDecryptionWithKey__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_VirgilSeqCipher_startDecryptionWithPassword_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilSeqCipher_process_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilSeqCipher_finish_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilSeqCipher_virgil_crypto_go_24e8eb615c27a4af(void);
extern void _wrap_delete_VirgilSeqCipher_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilSeqCipher_addKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_VirgilSeqCipher_removeKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_VirgilSeqCipher_keyRecipientExists_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_VirgilSeqCipher_addPasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_VirgilSeqCipher_removePasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_VirgilSeqCipher_passwordRecipientExists_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_VirgilSeqCipher_removeAllRecipients_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern uintptr_t _wrap_VirgilSeqCipher_getContentInfo_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern void _wrap_VirgilSeqCipher_setContentInfo_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern swig_intgo _wrap_VirgilSeqCipher_defineContentInfoSize_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilSeqCipher_customParams__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern uintptr_t _wrap_VirgilSeqCipher_customParams__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern uintptr_t _wrap_VirgilSeqCipher_computeShared__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilSeqCipher_computeShared__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_VirgilSignerBase__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(swig_intgo arg1);
extern uintptr_t _wrap_new_VirgilSignerBase__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_VirgilSignerBase_getHashAlgorithm_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilSignerBase_signHash__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_VirgilSignerBase_signHash__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern _Bool _wrap_VirgilSignerBase_verifyHash_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_delete_VirgilSignerBase_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilSigner__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(swig_intgo arg1);
extern uintptr_t _wrap_new_VirgilSigner__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_VirgilSigner_sign__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_VirgilSigner_sign__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern _Bool _wrap_VirgilSigner_verify_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_delete_VirgilSigner_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern swig_intgo _wrap_VirgilSigner_getHashAlgorithm_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern uintptr_t _wrap_VirgilSigner_signHash__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilSigner_signHash__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_VirgilSigner_verifyHash_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_new_VirgilSeqSigner__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(swig_intgo arg1);
extern uintptr_t _wrap_new_VirgilSeqSigner__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(void);
extern void _wrap_VirgilSeqSigner_startSigning_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilSeqSigner_startVerifying_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_VirgilSeqSigner_update_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilSeqSigner_sign__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilSeqSigner_sign__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_VirgilSeqSigner_verify_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_VirgilSeqSigner_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern swig_intgo _wrap_VirgilSeqSigner_getHashAlgorithm_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern uintptr_t _wrap_VirgilSeqSigner_signHash__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilSeqSigner_signHash__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_VirgilSeqSigner_verifyHash_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_new_VirgilStreamSigner__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(swig_intgo arg1);
extern uintptr_t _wrap_new_VirgilStreamSigner__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_VirgilStreamSigner_sign__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_VirgilStreamSigner_sign__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern _Bool _wrap_VirgilStreamSigner_verify_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_delete_VirgilStreamSigner_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern swig_intgo _wrap_VirgilStreamSigner_getHashAlgorithm_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern uintptr_t _wrap_VirgilStreamSigner_signHash__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilStreamSigner_signHash__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_VirgilStreamSigner_verifyHash_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_VirgilStreamCipher_encrypt__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4);
extern void _wrap_VirgilStreamCipher_encrypt__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_VirgilStreamCipher_decryptWithKey__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6);
extern void _wrap_VirgilStreamCipher_decryptWithKey__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern void _wrap_VirgilStreamCipher_decryptWithPassword_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_new_VirgilStreamCipher_virgil_crypto_go_24e8eb615c27a4af(void);
extern void _wrap_delete_VirgilStreamCipher_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilStreamCipher_addKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2);
extern void _wrap_VirgilStreamCipher_removeKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_VirgilStreamCipher_keyRecipientExists_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_VirgilStreamCipher_addPasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_VirgilStreamCipher_removePasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern _Bool _wrap_VirgilStreamCipher_passwordRecipientExists_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_VirgilStreamCipher_removeAllRecipients_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern uintptr_t _wrap_VirgilStreamCipher_getContentInfo_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern void _wrap_VirgilStreamCipher_setContentInfo_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base, uintptr_t arg1);
extern swig_intgo _wrap_VirgilStreamCipher_defineContentInfoSize_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilStreamCipher_customParams__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern uintptr_t _wrap_VirgilStreamCipher_customParams__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t _swig_base);
extern uintptr_t _wrap_VirgilStreamCipher_computeShared__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilStreamCipher_computeShared__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_PackageSize_Min_VirgilTinyCipher_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_PackageSize_Short_SMS_VirgilTinyCipher_virgil_crypto_go_24e8eb615c27a4af(void);
extern swig_intgo _wrap_PackageSize_Long_SMS_VirgilTinyCipher_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_new_VirgilTinyCipher__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(swig_intgo arg1);
extern uintptr_t _wrap_new_VirgilTinyCipher__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(void);
extern void _wrap_VirgilTinyCipher_reset_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilTinyCipher_encrypt_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_VirgilTinyCipher_encryptAndSign__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern void _wrap_VirgilTinyCipher_encryptAndSign__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern swig_intgo _wrap_VirgilTinyCipher_getPackageCount_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilTinyCipher_getPackage_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_VirgilTinyCipher_addPackage_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_VirgilTinyCipher_isPackagesAccumulated_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilTinyCipher_decrypt__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilTinyCipher_decrypt__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilTinyCipher_verifyAndDecrypt__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_VirgilTinyCipher_verifyAndDecrypt__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_delete_VirgilTinyCipher_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilByteArrayUtils_jsonToBytes_virgil_crypto_go_24e8eb615c27a4af(swig_type_8 arg1);
extern uintptr_t _wrap_VirgilByteArrayUtils_stringToBytes_virgil_crypto_go_24e8eb615c27a4af(swig_type_9 arg1);
extern swig_type_10 _wrap_VirgilByteArrayUtils_bytesToString_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilByteArrayUtils_hexToBytes_virgil_crypto_go_24e8eb615c27a4af(swig_type_11 arg1);
extern swig_type_12 _wrap_VirgilByteArrayUtils_bytesToHex__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, _Bool arg2);
extern swig_type_13 _wrap_VirgilByteArrayUtils_bytesToHex__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilByteArrayUtils_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPFSEncryptedMessage_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilPFSEncryptedMessage_getSessionIdentifier_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPFSEncryptedMessage_getSalt_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPFSEncryptedMessage_getCipherText_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilPFSEncryptedMessage_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPFSPublicKey__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPFSPublicKey__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(void);
extern _Bool _wrap_VirgilPFSPublicKey_isEmpty_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPFSPublicKey_getKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilPFSPublicKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPFSPrivateKey__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_VirgilPFSPrivateKey__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPFSPrivateKey__SWIG_2_virgil_crypto_go_24e8eb615c27a4af(void);
extern _Bool _wrap_VirgilPFSPrivateKey_isEmpty_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPFSPrivateKey_getKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPFSPrivateKey_getPassword_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPFSPrivateKey__SWIG_3_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilPFSPrivateKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPFSInitiatorPublicInfo_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilPFSInitiatorPublicInfo_getIdentityPublicKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPFSInitiatorPublicInfo_getEphemeralPublicKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilPFSInitiatorPublicInfo_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPFSInitiatorPrivateInfo_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilPFSInitiatorPrivateInfo_getIdentityPrivateKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPFSInitiatorPrivateInfo_getEphemeralPrivateKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilPFSInitiatorPrivateInfo_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPFSResponderPublicInfo__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_new_VirgilPFSResponderPublicInfo__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilPFSResponderPublicInfo_getIdentityPublicKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPFSResponderPublicInfo_getLongTermPublicKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPFSResponderPublicInfo_getOneTimePublicKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilPFSResponderPublicInfo_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPFSResponderPrivateInfo__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_new_VirgilPFSResponderPrivateInfo__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilPFSResponderPrivateInfo_getIdentityPrivateKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPFSResponderPrivateInfo_getLongTermPrivateKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPFSResponderPrivateInfo_getOneTimePrivateKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilPFSResponderPrivateInfo_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPFSSession__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_new_VirgilPFSSession__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern _Bool _wrap_VirgilPFSSession_isEmpty_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPFSSession_getIdentifier_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPFSSession_getEncryptionSecretKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPFSSession_getDecryptionSecretKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPFSSession_getAdditionalData_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilPFSSession_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPFS_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_VirgilPFS_startInitiatorSession__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_VirgilPFS_startInitiatorSession__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilPFS_startResponderSession__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_VirgilPFS_startResponderSession__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilPFS_encrypt_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilPFS_decrypt_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilPFS_getSession_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_VirgilPFS_setSession_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_VirgilPFS_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPythiaBlindResult__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilPythiaBlindResult_blindedPassword_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPythiaBlindResult_blindingSecret_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPythiaBlindResult__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilPythiaBlindResult_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPythiaContext__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_new_VirgilPythiaContext__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilPythiaContext_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPythiaTransformationKeyPair__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilPythiaTransformationKeyPair_publicKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPythiaTransformationKeyPair_privateKey_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPythiaTransformationKeyPair__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilPythiaTransformationKeyPair_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPythiaProveResult__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilPythiaProveResult_proofValueC_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPythiaProveResult_proofValueU_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPythiaProveResult__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilPythiaProveResult_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPythiaTransformResult__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilPythiaTransformResult_transformedPassword_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPythiaTransformResult_transformedTweak_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_new_VirgilPythiaTransformResult__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilPythiaTransformResult_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern uintptr_t _wrap_VirgilPythia_blind_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VirgilPythia_deblind_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilPythia_computeTransformationKeyPair_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_VirgilPythia_transform_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_VirgilPythia_prove_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern _Bool _wrap_VirgilPythia_verify_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, uintptr_t arg7);
extern uintptr_t _wrap_VirgilPythia_getPasswordUpdateToken_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_VirgilPythia_updateDeblindedWithToken_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_new_VirgilPythia__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(void);
extern uintptr_t _wrap_new_VirgilPythia__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern void _wrap_delete_VirgilPythia_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1);
extern swig_intgo _wrap_virgil_pythia_blind_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern swig_intgo _wrap_virgil_pythia_deblind_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern swig_intgo _wrap_virgil_pythia_compute_transformation_key_pair_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern swig_intgo _wrap_virgil_pythia_transform_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern swig_intgo _wrap_virgil_pythia_prove_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, uintptr_t arg7);
extern swig_intgo _wrap_virgil_pythia_verify_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, swig_voidp arg7);
extern swig_intgo _wrap_virgil_pythia_get_password_update_token_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern swig_intgo _wrap_virgil_pythia_update_deblinded_with_token_virgil_crypto_go_24e8eb615c27a4af(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
#undef intgo
*/
import "C"

import (
	_ "runtime/cgo"
	"sync"
	"unsafe"
)

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

type _ sync.Mutex

type swig_gostring struct {
	p uintptr
	n int
}

func swigCopyString(s string) string {
	p := *(*swig_gostring)(unsafe.Pointer(&s))
	r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
	Swig_free(p.p)
	return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_virgil_crypto_go_24e8eb615c27a4af(C.swig_intgo(_swig_i_0)))
	return swig_r
}

const VIRGIL_CRYPTO_FEATURE_LOW_LEVEL_WRAP int = 0
const VIRGIL_CRYPTO_FEATURE_PYTHIA int = 1

type SwigcptrVirgilByteArray uintptr

func (p SwigcptrVirgilByteArray) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilByteArray) SwigIsVirgilByteArray() {
}

func NewVirgilByteArray__SWIG_0() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_new_VirgilByteArray__SWIG_0_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func NewVirgilByteArray__SWIG_1(arg1 uint) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_new_VirgilByteArray__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewVirgilByteArray__SWIG_2(arg1 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_new_VirgilByteArray__SWIG_2_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilByteArray(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 0 {
		return NewVirgilByteArray__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(SwigcptrVirgilByteArray); !ok {
			goto check_2
		}
		return NewVirgilByteArray__SWIG_2(a[0].(VirgilByteArray))
	}
check_2:
	if argc == 1 {
		return NewVirgilByteArray__SWIG_1(a[0].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilByteArray) Size() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_VirgilByteArray_size_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilByteArray) Capacity() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_VirgilByteArray_capacity_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilByteArray) Reserve(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_VirgilByteArray_reserve_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrVirgilByteArray) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_VirgilByteArray_isEmpty_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilByteArray) Clear() {
	_swig_i_0 := arg1
	C._wrap_VirgilByteArray_clear_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVirgilByteArray) Add(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_VirgilByteArray_add_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrVirgilByteArray) Get(arg2 int) (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (byte)(C._wrap_VirgilByteArray_get_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVirgilByteArray) Set(arg2 int, arg3 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_VirgilByteArray_set_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.char(_swig_i_2))
}

func DeleteVirgilByteArray(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilByteArray_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilByteArray interface {
	Swigcptr() uintptr
	SwigIsVirgilByteArray()
	Size() (_swig_ret uint)
	Capacity() (_swig_ret uint)
	Reserve(arg2 uint)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 byte)
	Get(arg2 int) (_swig_ret byte)
	Set(arg2 int, arg3 byte)
}

type SwigcptrVirgilVersion uintptr

func (p SwigcptrVirgilVersion) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilVersion) SwigIsVirgilVersion() {
}

func VirgilVersionAsNumber() (_swig_ret uint) {
	var swig_r uint
	swig_r = (uint)(C._wrap_VirgilVersion_asNumber_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

func VirgilVersionAsString() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_VirgilVersion_asString_virgil_crypto_go_24e8eb615c27a4af()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func VirgilVersionMajorVersion() (_swig_ret uint) {
	var swig_r uint
	swig_r = (uint)(C._wrap_VirgilVersion_majorVersion_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

func VirgilVersionMinorVersion() (_swig_ret uint) {
	var swig_r uint
	swig_r = (uint)(C._wrap_VirgilVersion_minorVersion_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

func VirgilVersionPatchVersion() (_swig_ret uint) {
	var swig_r uint
	swig_r = (uint)(C._wrap_VirgilVersion_patchVersion_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

func VirgilVersionFullName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_VirgilVersion_fullName_virgil_crypto_go_24e8eb615c27a4af()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func NewVirgilVersion() (_swig_ret VirgilVersion) {
	var swig_r VirgilVersion
	swig_r = (VirgilVersion)(SwigcptrVirgilVersion(C._wrap_new_VirgilVersion_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func DeleteVirgilVersion(arg1 VirgilVersion) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilVersion_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilVersion interface {
	Swigcptr() uintptr
	SwigIsVirgilVersion()
}

type _swig_DirectorVirgilDataSource struct {
	SwigcptrVirgilDataSource
	v interface{}
}

func (p *_swig_DirectorVirgilDataSource) Swigcptr() uintptr {
	return p.SwigcptrVirgilDataSource.Swigcptr()
}

func (p *_swig_DirectorVirgilDataSource) SwigIsVirgilDataSource() {
}

func (p *_swig_DirectorVirgilDataSource) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorVirgilDataSource(v interface{}) VirgilDataSource {
	p := &_swig_DirectorVirgilDataSource{0, v}
	p.SwigcptrVirgilDataSource = SwigcptrVirgilDataSource(C._wrap__swig_NewDirectorVirgilDataSourceVirgilDataSource_virgil_crypto_go_24e8eb615c27a4af(C.int(swigDirectorAdd(p))))
	return p
}

type _swig_DirectorInterfaceVirgilDataSourceHasData interface {
	HasData() bool
}

func (swig_p *_swig_DirectorVirgilDataSource) HasData() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceVirgilDataSourceHasData); swig_ok {
		return swig_g.HasData()
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorVirgilDataSource_callback_hasData_virgil_crypto_go_24e8eb615c27a4af
func Swig_DirectorVirgilDataSource_callback_hasData_virgil_crypto_go_24e8eb615c27a4af(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorVirgilDataSource)
	swig_r = swig_p.HasData()
	return swig_r
}

type _swig_DirectorInterfaceVirgilDataSourceRead interface {
	Read() VirgilByteArray
}

func (swig_p *_swig_DirectorVirgilDataSource) Read() VirgilByteArray {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceVirgilDataSourceRead); swig_ok {
		return swig_g.Read()
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorVirgilDataSource_callback_read_virgil_crypto_go_24e8eb615c27a4af
func Swig_DirectorVirgilDataSource_callback_read_virgil_crypto_go_24e8eb615c27a4af(swig_c int) (swig_result SwigcptrVirgilByteArray) {
	var swig_r SwigcptrVirgilByteArray
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorVirgilDataSource)
	swig_r = SwigcptrVirgilByteArray(swig_p.Read().Swigcptr())
	return swig_r
}

func DeleteDirectorVirgilDataSource(arg1 VirgilDataSource) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_DeleteDirectorVirgilDataSource_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_VirgilDataSource_virgil_crypto_go_24e8eb615c27a4af
func Swiggo_DeleteDirector_VirgilDataSource_virgil_crypto_go_24e8eb615c27a4af(c int) {
	swigDirectorLookup(c).(*_swig_DirectorVirgilDataSource).SwigcptrVirgilDataSource = 0
	swigDirectorDelete(c)
}

type SwigcptrVirgilDataSource uintptr

func (p SwigcptrVirgilDataSource) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilDataSource) SwigIsVirgilDataSource() {
}

func (p SwigcptrVirgilDataSource) DirectorInterface() interface{} {
	return nil
}

func (arg1 SwigcptrVirgilDataSource) HasData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_VirgilDataSource_hasData_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilDataSource) Read() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilDataSource_read_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteVirgilDataSource(arg1 VirgilDataSource) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilDataSource_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilDataSource interface {
	Swigcptr() uintptr
	SwigIsVirgilDataSource()
	DirectorInterface() interface{}
	HasData() (_swig_ret bool)
	Read() (_swig_ret VirgilByteArray)
}

type _swig_DirectorVirgilDataSink struct {
	SwigcptrVirgilDataSink
	v interface{}
}

func (p *_swig_DirectorVirgilDataSink) Swigcptr() uintptr {
	return p.SwigcptrVirgilDataSink.Swigcptr()
}

func (p *_swig_DirectorVirgilDataSink) SwigIsVirgilDataSink() {
}

func (p *_swig_DirectorVirgilDataSink) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorVirgilDataSink(v interface{}) VirgilDataSink {
	p := &_swig_DirectorVirgilDataSink{0, v}
	p.SwigcptrVirgilDataSink = SwigcptrVirgilDataSink(C._wrap__swig_NewDirectorVirgilDataSinkVirgilDataSink_virgil_crypto_go_24e8eb615c27a4af(C.int(swigDirectorAdd(p))))
	return p
}

type _swig_DirectorInterfaceVirgilDataSinkIsGood interface {
	IsGood() bool
}

func (swig_p *_swig_DirectorVirgilDataSink) IsGood() bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceVirgilDataSinkIsGood); swig_ok {
		return swig_g.IsGood()
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorVirgilDataSink_callback_isGood_virgil_crypto_go_24e8eb615c27a4af
func Swig_DirectorVirgilDataSink_callback_isGood_virgil_crypto_go_24e8eb615c27a4af(swig_c int) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorVirgilDataSink)
	swig_r = swig_p.IsGood()
	return swig_r
}

type _swig_DirectorInterfaceVirgilDataSinkWrite interface {
	Write(VirgilByteArray)
}

func (swig_p *_swig_DirectorVirgilDataSink) Write(data VirgilByteArray) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceVirgilDataSinkWrite); swig_ok {
		swig_g.Write(data)
		return
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorVirgilDataSink_callback_write_virgil_crypto_go_24e8eb615c27a4af
func Swig_DirectorVirgilDataSink_callback_write_virgil_crypto_go_24e8eb615c27a4af(swig_c int, data uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorVirgilDataSink)
	swig_p.Write(SwigcptrVirgilByteArray(data))
}

func DeleteDirectorVirgilDataSink(arg1 VirgilDataSink) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_DeleteDirectorVirgilDataSink_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_VirgilDataSink_virgil_crypto_go_24e8eb615c27a4af
func Swiggo_DeleteDirector_VirgilDataSink_virgil_crypto_go_24e8eb615c27a4af(c int) {
	swigDirectorLookup(c).(*_swig_DirectorVirgilDataSink).SwigcptrVirgilDataSink = 0
	swigDirectorDelete(c)
}

type SwigcptrVirgilDataSink uintptr

func (p SwigcptrVirgilDataSink) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilDataSink) SwigIsVirgilDataSink() {
}

func (p SwigcptrVirgilDataSink) DirectorInterface() interface{} {
	return nil
}

func (arg1 SwigcptrVirgilDataSink) IsGood() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_VirgilDataSink_isGood_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilDataSink) Write(arg2 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilDataSink_write_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DeleteVirgilDataSink(arg1 VirgilDataSink) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilDataSink_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilDataSink interface {
	Swigcptr() uintptr
	SwigIsVirgilDataSink()
	DirectorInterface() interface{}
	IsGood() (_swig_ret bool)
	Write(arg2 VirgilByteArray)
}

type SwigcptrVirgilAsn1Compatible uintptr

func (p SwigcptrVirgilAsn1Compatible) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilAsn1Compatible) SwigIsVirgilAsn1Compatible() {
}

func (arg1 SwigcptrVirgilAsn1Compatible) ToAsn1() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilAsn1Compatible_toAsn1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilAsn1Compatible) FromAsn1(arg2 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilAsn1Compatible_fromAsn1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DeleteVirgilAsn1Compatible(arg1 VirgilAsn1Compatible) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilAsn1Compatible_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilAsn1Compatible interface {
	Swigcptr() uintptr
	SwigIsVirgilAsn1Compatible()
	ToAsn1() (_swig_ret VirgilByteArray)
	FromAsn1(arg2 VirgilByteArray)
}

type SwigcptrVirgilKeyPair uintptr

func (p SwigcptrVirgilKeyPair) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilKeyPair) SwigIsVirgilKeyPair() {
}

type VirgilCryptoVirgilKeyPairType int

func _swig_getVirgilKeyPair_Type_RSA_256_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_RSA_256_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_RSA_256 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_RSA_256_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_RSA_512_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_RSA_512_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_RSA_512 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_RSA_512_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_RSA_1024_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_RSA_1024_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_RSA_1024 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_RSA_1024_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_RSA_2048_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_RSA_2048_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_RSA_2048 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_RSA_2048_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_RSA_3072_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_RSA_3072_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_RSA_3072 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_RSA_3072_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_RSA_4096_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_RSA_4096_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_RSA_4096 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_RSA_4096_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_RSA_8192_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_RSA_8192_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_RSA_8192 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_RSA_8192_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_EC_SECP192R1_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_EC_SECP192R1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_EC_SECP192R1 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_EC_SECP192R1_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_EC_SECP224R1_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_EC_SECP224R1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_EC_SECP224R1 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_EC_SECP224R1_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_EC_SECP256R1_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_EC_SECP256R1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_EC_SECP256R1 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_EC_SECP256R1_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_EC_SECP384R1_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_EC_SECP384R1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_EC_SECP384R1 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_EC_SECP384R1_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_EC_SECP521R1_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_EC_SECP521R1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_EC_SECP521R1 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_EC_SECP521R1_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_EC_BP256R1_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_EC_BP256R1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_EC_BP256R1 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_EC_BP256R1_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_EC_BP384R1_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_EC_BP384R1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_EC_BP384R1 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_EC_BP384R1_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_EC_BP512R1_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_EC_BP512R1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_EC_BP512R1 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_EC_BP512R1_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_EC_SECP192K1_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_EC_SECP192K1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_EC_SECP192K1 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_EC_SECP192K1_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_EC_SECP224K1_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_EC_SECP224K1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_EC_SECP224K1 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_EC_SECP224K1_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_EC_SECP256K1_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_EC_SECP256K1_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_EC_SECP256K1 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_EC_SECP256K1_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_EC_CURVE25519_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_EC_CURVE25519_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_EC_CURVE25519 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_EC_CURVE25519_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_FAST_EC_X25519_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_FAST_EC_X25519_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_FAST_EC_X25519 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_FAST_EC_X25519_VirgilKeyPair()

func _swig_getVirgilKeyPair_Type_FAST_EC_ED25519_VirgilKeyPair() (_swig_ret VirgilCryptoVirgilKeyPairType) {
	var swig_r VirgilCryptoVirgilKeyPairType
	swig_r = (VirgilCryptoVirgilKeyPairType)(C._wrap_Type_FAST_EC_ED25519_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilKeyPairType_FAST_EC_ED25519 VirgilCryptoVirgilKeyPairType = _swig_getVirgilKeyPair_Type_FAST_EC_ED25519_VirgilKeyPair()

func VirgilKeyPairGenerate__SWIG_0(arg1 VirgilCryptoVirgilKeyPairType, arg2 VirgilByteArray) (_swig_ret VirgilKeyPair) {
	var swig_r VirgilKeyPair
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilKeyPair)(SwigcptrVirgilKeyPair(C._wrap_VirgilKeyPair_generate__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func VirgilKeyPairGenerate__SWIG_1(arg1 VirgilCryptoVirgilKeyPairType) (_swig_ret VirgilKeyPair) {
	var swig_r VirgilKeyPair
	_swig_i_0 := arg1
	swig_r = (VirgilKeyPair)(SwigcptrVirgilKeyPair(C._wrap_VirgilKeyPair_generate__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func VirgilKeyPairGenerate(a ...interface{}) VirgilKeyPair {
	argc := len(a)
	if argc == 1 {
		return VirgilKeyPairGenerate__SWIG_1(a[0].(VirgilCryptoVirgilKeyPairType))
	}
	if argc == 2 {
		return VirgilKeyPairGenerate__SWIG_0(a[0].(VirgilCryptoVirgilKeyPairType), a[1].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func VirgilKeyPairGenerateRecommended__SWIG_0(arg1 VirgilByteArray) (_swig_ret VirgilKeyPair) {
	var swig_r VirgilKeyPair
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilKeyPair)(SwigcptrVirgilKeyPair(C._wrap_VirgilKeyPair_generateRecommended__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func VirgilKeyPairGenerateRecommended__SWIG_1() (_swig_ret VirgilKeyPair) {
	var swig_r VirgilKeyPair
	swig_r = (VirgilKeyPair)(SwigcptrVirgilKeyPair(C._wrap_VirgilKeyPair_generateRecommended__SWIG_1_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func VirgilKeyPairGenerateRecommended(a ...interface{}) VirgilKeyPair {
	argc := len(a)
	if argc == 0 {
		return VirgilKeyPairGenerateRecommended__SWIG_1()
	}
	if argc == 1 {
		return VirgilKeyPairGenerateRecommended__SWIG_0(a[0].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func VirgilKeyPairGenerateFrom__SWIG_0(arg1 VirgilKeyPair, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilKeyPair) {
	var swig_r VirgilKeyPair
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilKeyPair)(SwigcptrVirgilKeyPair(C._wrap_VirgilKeyPair_generateFrom__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func VirgilKeyPairGenerateFrom__SWIG_1(arg1 VirgilKeyPair, arg2 VirgilByteArray) (_swig_ret VirgilKeyPair) {
	var swig_r VirgilKeyPair
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilKeyPair)(SwigcptrVirgilKeyPair(C._wrap_VirgilKeyPair_generateFrom__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func VirgilKeyPairGenerateFrom__SWIG_2(arg1 VirgilKeyPair) (_swig_ret VirgilKeyPair) {
	var swig_r VirgilKeyPair
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilKeyPair)(SwigcptrVirgilKeyPair(C._wrap_VirgilKeyPair_generateFrom__SWIG_2_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func VirgilKeyPairGenerateFrom(a ...interface{}) VirgilKeyPair {
	argc := len(a)
	if argc == 1 {
		return VirgilKeyPairGenerateFrom__SWIG_2(a[0].(VirgilKeyPair))
	}
	if argc == 2 {
		return VirgilKeyPairGenerateFrom__SWIG_1(a[0].(VirgilKeyPair), a[1].(VirgilByteArray))
	}
	if argc == 3 {
		return VirgilKeyPairGenerateFrom__SWIG_0(a[0].(VirgilKeyPair), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func VirgilKeyPairGenerateFromKeyMaterial__SWIG_0(arg1 VirgilCryptoVirgilKeyPairType, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilKeyPair) {
	var swig_r VirgilKeyPair
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilKeyPair)(SwigcptrVirgilKeyPair(C._wrap_VirgilKeyPair_generateFromKeyMaterial__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func VirgilKeyPairGenerateFromKeyMaterial__SWIG_1(arg1 VirgilCryptoVirgilKeyPairType, arg2 VirgilByteArray) (_swig_ret VirgilKeyPair) {
	var swig_r VirgilKeyPair
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilKeyPair)(SwigcptrVirgilKeyPair(C._wrap_VirgilKeyPair_generateFromKeyMaterial__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func VirgilKeyPairGenerateFromKeyMaterial(a ...interface{}) VirgilKeyPair {
	argc := len(a)
	if argc == 2 {
		return VirgilKeyPairGenerateFromKeyMaterial__SWIG_1(a[0].(VirgilCryptoVirgilKeyPairType), a[1].(VirgilByteArray))
	}
	if argc == 3 {
		return VirgilKeyPairGenerateFromKeyMaterial__SWIG_0(a[0].(VirgilCryptoVirgilKeyPairType), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func VirgilKeyPairGenerateRecommendedFromKeyMaterial__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilKeyPair) {
	var swig_r VirgilKeyPair
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilKeyPair)(SwigcptrVirgilKeyPair(C._wrap_VirgilKeyPair_generateRecommendedFromKeyMaterial__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func VirgilKeyPairGenerateRecommendedFromKeyMaterial__SWIG_1(arg1 VirgilByteArray) (_swig_ret VirgilKeyPair) {
	var swig_r VirgilKeyPair
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilKeyPair)(SwigcptrVirgilKeyPair(C._wrap_VirgilKeyPair_generateRecommendedFromKeyMaterial__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func VirgilKeyPairGenerateRecommendedFromKeyMaterial(a ...interface{}) VirgilKeyPair {
	argc := len(a)
	if argc == 1 {
		return VirgilKeyPairGenerateRecommendedFromKeyMaterial__SWIG_1(a[0].(VirgilByteArray))
	}
	if argc == 2 {
		return VirgilKeyPairGenerateRecommendedFromKeyMaterial__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func VirgilKeyPairIsKeyPairMatch__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilKeyPair_isKeyPairMatch__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func VirgilKeyPairIsKeyPairMatch__SWIG_1(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilKeyPair_isKeyPairMatch__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func VirgilKeyPairIsKeyPairMatch(a ...interface{}) bool {
	argc := len(a)
	if argc == 2 {
		return VirgilKeyPairIsKeyPairMatch__SWIG_1(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	if argc == 3 {
		return VirgilKeyPairIsKeyPairMatch__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func VirgilKeyPairCheckPrivateKeyPassword(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilKeyPair_checkPrivateKeyPassword_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func VirgilKeyPairIsPrivateKeyEncrypted(arg1 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilKeyPair_isPrivateKeyEncrypted_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func VirgilKeyPairResetPrivateKeyPassword(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilKeyPair_resetPrivateKeyPassword_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func VirgilKeyPairEncryptPrivateKey(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilKeyPair_encryptPrivateKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func VirgilKeyPairDecryptPrivateKey(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilKeyPair_decryptPrivateKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func VirgilKeyPairExtractPublicKey(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilKeyPair_extractPublicKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func VirgilKeyPairPublicKeyToPEM(arg1 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilKeyPair_publicKeyToPEM_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func VirgilKeyPairPublicKeyToDER(arg1 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilKeyPair_publicKeyToDER_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func VirgilKeyPairPrivateKeyToPEM__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilKeyPair_privateKeyToPEM__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func VirgilKeyPairPrivateKeyToPEM__SWIG_1(arg1 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilKeyPair_privateKeyToPEM__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func VirgilKeyPairPrivateKeyToPEM(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 1 {
		return VirgilKeyPairPrivateKeyToPEM__SWIG_1(a[0].(VirgilByteArray))
	}
	if argc == 2 {
		return VirgilKeyPairPrivateKeyToPEM__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func VirgilKeyPairPrivateKeyToDER__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilKeyPair_privateKeyToDER__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func VirgilKeyPairPrivateKeyToDER__SWIG_1(arg1 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilKeyPair_privateKeyToDER__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func VirgilKeyPairPrivateKeyToDER(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 1 {
		return VirgilKeyPairPrivateKeyToDER__SWIG_1(a[0].(VirgilByteArray))
	}
	if argc == 2 {
		return VirgilKeyPairPrivateKeyToDER__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func NewVirgilKeyPair__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilKeyPair) {
	var swig_r VirgilKeyPair
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilKeyPair)(SwigcptrVirgilKeyPair(C._wrap_new_VirgilKeyPair__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVirgilKeyPair) PublicKey() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilKeyPair_publicKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilKeyPair) PrivateKey() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilKeyPair_privateKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilKeyPair__SWIG_1(arg1 VirgilKeyPair) (_swig_ret VirgilKeyPair) {
	var swig_r VirgilKeyPair
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilKeyPair)(SwigcptrVirgilKeyPair(C._wrap_new_VirgilKeyPair__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilKeyPair(a ...interface{}) VirgilKeyPair {
	argc := len(a)
	if argc == 1 {
		return NewVirgilKeyPair__SWIG_1(a[0].(VirgilKeyPair))
	}
	if argc == 2 {
		return NewVirgilKeyPair__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func DeleteVirgilKeyPair(arg1 VirgilKeyPair) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilKeyPair_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilKeyPair interface {
	Swigcptr() uintptr
	SwigIsVirgilKeyPair()
	PublicKey() (_swig_ret VirgilByteArray)
	PrivateKey() (_swig_ret VirgilByteArray)
}

type SwigcptrVirgilHash uintptr

func (p SwigcptrVirgilHash) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilHash) SwigIsVirgilHash() {
}

type VirgilCryptoFoundationVirgilHashAlgorithm int

func _swig_getVirgilHash_Algorithm_MD5_VirgilHash() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm) {
	var swig_r VirgilCryptoFoundationVirgilHashAlgorithm
	swig_r = (VirgilCryptoFoundationVirgilHashAlgorithm)(C._wrap_Algorithm_MD5_VirgilHash_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilHashAlgorithm_MD5 VirgilCryptoFoundationVirgilHashAlgorithm = _swig_getVirgilHash_Algorithm_MD5_VirgilHash()

func _swig_getVirgilHash_Algorithm_SHA1_VirgilHash() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm) {
	var swig_r VirgilCryptoFoundationVirgilHashAlgorithm
	swig_r = (VirgilCryptoFoundationVirgilHashAlgorithm)(C._wrap_Algorithm_SHA1_VirgilHash_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilHashAlgorithm_SHA1 VirgilCryptoFoundationVirgilHashAlgorithm = _swig_getVirgilHash_Algorithm_SHA1_VirgilHash()

func _swig_getVirgilHash_Algorithm_SHA224_VirgilHash() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm) {
	var swig_r VirgilCryptoFoundationVirgilHashAlgorithm
	swig_r = (VirgilCryptoFoundationVirgilHashAlgorithm)(C._wrap_Algorithm_SHA224_VirgilHash_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilHashAlgorithm_SHA224 VirgilCryptoFoundationVirgilHashAlgorithm = _swig_getVirgilHash_Algorithm_SHA224_VirgilHash()

func _swig_getVirgilHash_Algorithm_SHA256_VirgilHash() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm) {
	var swig_r VirgilCryptoFoundationVirgilHashAlgorithm
	swig_r = (VirgilCryptoFoundationVirgilHashAlgorithm)(C._wrap_Algorithm_SHA256_VirgilHash_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilHashAlgorithm_SHA256 VirgilCryptoFoundationVirgilHashAlgorithm = _swig_getVirgilHash_Algorithm_SHA256_VirgilHash()

func _swig_getVirgilHash_Algorithm_SHA384_VirgilHash() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm) {
	var swig_r VirgilCryptoFoundationVirgilHashAlgorithm
	swig_r = (VirgilCryptoFoundationVirgilHashAlgorithm)(C._wrap_Algorithm_SHA384_VirgilHash_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilHashAlgorithm_SHA384 VirgilCryptoFoundationVirgilHashAlgorithm = _swig_getVirgilHash_Algorithm_SHA384_VirgilHash()

func _swig_getVirgilHash_Algorithm_SHA512_VirgilHash() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm) {
	var swig_r VirgilCryptoFoundationVirgilHashAlgorithm
	swig_r = (VirgilCryptoFoundationVirgilHashAlgorithm)(C._wrap_Algorithm_SHA512_VirgilHash_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilHashAlgorithm_SHA512 VirgilCryptoFoundationVirgilHashAlgorithm = _swig_getVirgilHash_Algorithm_SHA512_VirgilHash()

func NewVirgilHash__SWIG_0() (_swig_ret VirgilHash) {
	var swig_r VirgilHash
	swig_r = (VirgilHash)(SwigcptrVirgilHash(C._wrap_new_VirgilHash__SWIG_0_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func NewVirgilHash__SWIG_1(arg1 VirgilCryptoFoundationVirgilHashAlgorithm) (_swig_ret VirgilHash) {
	var swig_r VirgilHash
	_swig_i_0 := arg1
	swig_r = (VirgilHash)(SwigcptrVirgilHash(C._wrap_new_VirgilHash__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewVirgilHash__SWIG_2(arg1 string) (_swig_ret VirgilHash) {
	var swig_r VirgilHash
	_swig_i_0 := arg1
	swig_r = (VirgilHash)(SwigcptrVirgilHash(C._wrap_new_VirgilHash__SWIG_2_virgil_crypto_go_24e8eb615c27a4af(*(*C.swig_type_3)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (arg1 SwigcptrVirgilHash) Name() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_VirgilHash_name_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrVirgilHash) Algorithm() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm) {
	var swig_r VirgilCryptoFoundationVirgilHashAlgorithm
	_swig_i_0 := arg1
	swig_r = (VirgilCryptoFoundationVirgilHashAlgorithm)(C._wrap_VirgilHash_algorithm_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilHash) Xtype() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_VirgilHash_Xtype_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilHash) Size() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_VirgilHash_size_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilHash) Hash(arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilHash_hash_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVirgilHash) Start() {
	_swig_i_0 := arg1
	C._wrap_VirgilHash_start_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVirgilHash) Update(arg2 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilHash_update_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrVirgilHash) Finish() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilHash_finish_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilHash) Hmac(arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilHash_hmac_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrVirgilHash) HmacStart(arg2 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilHash_hmacStart_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrVirgilHash) HmacReset() {
	_swig_i_0 := arg1
	C._wrap_VirgilHash_hmacReset_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVirgilHash) HmacUpdate(arg2 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilHash_hmacUpdate_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrVirgilHash) HmacFinish() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilHash_hmacFinish_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteVirgilHash(arg1 VirgilHash) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilHash_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func NewVirgilHash__SWIG_3(arg1 VirgilHash) (_swig_ret VirgilHash) {
	var swig_r VirgilHash
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilHash)(SwigcptrVirgilHash(C._wrap_new_VirgilHash__SWIG_3_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilHash(a ...interface{}) VirgilHash {
	argc := len(a)
	if argc == 0 {
		return NewVirgilHash__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(VirgilCryptoFoundationVirgilHashAlgorithm); !ok {
			goto check_2
		}
		return NewVirgilHash__SWIG_1(a[0].(VirgilCryptoFoundationVirgilHashAlgorithm))
	}
check_2:
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_3
		}
		return NewVirgilHash__SWIG_2(a[0].(string))
	}
check_3:
	if argc == 1 {
		return NewVirgilHash__SWIG_3(a[0].(VirgilHash))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrVirgilHash) ToAsn1() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilHash_toAsn1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrVirgilHash) FromAsn1(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilHash_fromAsn1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (p SwigcptrVirgilHash) SwigIsVirgilAsn1Compatible() {
}

func (p SwigcptrVirgilHash) SwigGetVirgilAsn1Compatible() VirgilAsn1Compatible {
	return SwigcptrVirgilAsn1Compatible(p.Swigcptr())
}

type VirgilHash interface {
	Swigcptr() uintptr
	SwigIsVirgilHash()
	Name() (_swig_ret string)
	Algorithm() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm)
	Xtype() (_swig_ret int)
	Size() (_swig_ret uint)
	Hash(arg2 VirgilByteArray) (_swig_ret VirgilByteArray)
	Start()
	Update(arg2 VirgilByteArray)
	Finish() (_swig_ret VirgilByteArray)
	Hmac(arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray)
	HmacStart(arg2 VirgilByteArray)
	HmacReset()
	HmacUpdate(arg2 VirgilByteArray)
	HmacFinish() (_swig_ret VirgilByteArray)
	ToAsn1() (_swig_ret VirgilByteArray)
	FromAsn1(arg1 VirgilByteArray)
	SwigIsVirgilAsn1Compatible()
	SwigGetVirgilAsn1Compatible() VirgilAsn1Compatible
}

type SwigcptrVirgilBase64 uintptr

func (p SwigcptrVirgilBase64) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilBase64) SwigIsVirgilBase64() {
}

func VirgilBase64Encode(arg1 VirgilByteArray) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1.Swigcptr()
	swig_r_p := C._wrap_VirgilBase64_encode_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func VirgilBase64Decode(arg1 string) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilBase64_decode_virgil_crypto_go_24e8eb615c27a4af(*(*C.swig_type_6)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DeleteVirgilBase64(arg1 VirgilBase64) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilBase64_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilBase64 interface {
	Swigcptr() uintptr
	SwigIsVirgilBase64()
}

type SwigcptrVirgilPBKDF uintptr

func (p SwigcptrVirgilPBKDF) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilPBKDF) SwigIsVirgilPBKDF() {
}

func _swig_getVirgilPBKDF_VirgilPBKDF_kIterationCount_Default_VirgilPBKDF() (_swig_ret uint) {
	var swig_r uint
	swig_r = (uint)(C._wrap_VirgilPBKDF_kIterationCount_Default_VirgilPBKDF_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilPBKDFKIterationCount_Default uint = _swig_getVirgilPBKDF_VirgilPBKDF_kIterationCount_Default_VirgilPBKDF()

type VirgilCryptoFoundationVirgilPBKDFAlgorithm int

func _swig_getVirgilPBKDF_Algorithm_PBKDF2_VirgilPBKDF() (_swig_ret VirgilCryptoFoundationVirgilPBKDFAlgorithm) {
	var swig_r VirgilCryptoFoundationVirgilPBKDFAlgorithm
	swig_r = (VirgilCryptoFoundationVirgilPBKDFAlgorithm)(C._wrap_Algorithm_PBKDF2_VirgilPBKDF_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilPBKDFAlgorithm_PBKDF2 VirgilCryptoFoundationVirgilPBKDFAlgorithm = _swig_getVirgilPBKDF_Algorithm_PBKDF2_VirgilPBKDF()

func NewVirgilPBKDF__SWIG_0() (_swig_ret VirgilPBKDF) {
	var swig_r VirgilPBKDF
	swig_r = (VirgilPBKDF)(SwigcptrVirgilPBKDF(C._wrap_new_VirgilPBKDF__SWIG_0_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func NewVirgilPBKDF__SWIG_1(arg1 VirgilByteArray, arg2 uint) (_swig_ret VirgilPBKDF) {
	var swig_r VirgilPBKDF
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (VirgilPBKDF)(SwigcptrVirgilPBKDF(C._wrap_new_VirgilPBKDF__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func NewVirgilPBKDF__SWIG_2(arg1 VirgilByteArray) (_swig_ret VirgilPBKDF) {
	var swig_r VirgilPBKDF
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilPBKDF)(SwigcptrVirgilPBKDF(C._wrap_new_VirgilPBKDF__SWIG_2_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilPBKDF(a ...interface{}) VirgilPBKDF {
	argc := len(a)
	if argc == 0 {
		return NewVirgilPBKDF__SWIG_0()
	}
	if argc == 1 {
		return NewVirgilPBKDF__SWIG_2(a[0].(VirgilByteArray))
	}
	if argc == 2 {
		return NewVirgilPBKDF__SWIG_1(a[0].(VirgilByteArray), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilPBKDF) GetSalt() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPBKDF_getSalt_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPBKDF) GetIterationCount() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_VirgilPBKDF_getIterationCount_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilPBKDF) SetAlgorithm(arg2 VirgilCryptoFoundationVirgilPBKDFAlgorithm) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_VirgilPBKDF_setAlgorithm_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrVirgilPBKDF) GetAlgorithm() (_swig_ret VirgilCryptoFoundationVirgilPBKDFAlgorithm) {
	var swig_r VirgilCryptoFoundationVirgilPBKDFAlgorithm
	_swig_i_0 := arg1
	swig_r = (VirgilCryptoFoundationVirgilPBKDFAlgorithm)(C._wrap_VirgilPBKDF_getAlgorithm_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilPBKDF) SetHashAlgorithm(arg2 VirgilCryptoFoundationVirgilHashAlgorithm) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_VirgilPBKDF_setHashAlgorithm_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrVirgilPBKDF) GetHashAlgorithm() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm) {
	var swig_r VirgilCryptoFoundationVirgilHashAlgorithm
	_swig_i_0 := arg1
	swig_r = (VirgilCryptoFoundationVirgilHashAlgorithm)(C._wrap_VirgilPBKDF_getHashAlgorithm_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilPBKDF) EnableRecommendationsCheck() {
	_swig_i_0 := arg1
	C._wrap_VirgilPBKDF_enableRecommendationsCheck_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVirgilPBKDF) DisableRecommendationsCheck() {
	_swig_i_0 := arg1
	C._wrap_VirgilPBKDF_disableRecommendationsCheck_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVirgilPBKDF) Derive__SWIG_0(arg2 VirgilByteArray, arg3 uint) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPBKDF_derive__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrVirgilPBKDF) Derive__SWIG_1(arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPBKDF_derive__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrVirgilPBKDF) Derive(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 1 {
		return p.Derive__SWIG_1(a[0].(VirgilByteArray))
	}
	if argc == 2 {
		return p.Derive__SWIG_0(a[0].(VirgilByteArray), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

func DeleteVirgilPBKDF(arg1 VirgilPBKDF) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilPBKDF_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilPBKDF) ToAsn1() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPBKDF_toAsn1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrVirgilPBKDF) FromAsn1(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilPBKDF_fromAsn1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (p SwigcptrVirgilPBKDF) SwigIsVirgilAsn1Compatible() {
}

func (p SwigcptrVirgilPBKDF) SwigGetVirgilAsn1Compatible() VirgilAsn1Compatible {
	return SwigcptrVirgilAsn1Compatible(p.Swigcptr())
}

type VirgilPBKDF interface {
	Swigcptr() uintptr
	SwigIsVirgilPBKDF()
	GetSalt() (_swig_ret VirgilByteArray)
	GetIterationCount() (_swig_ret uint)
	SetAlgorithm(arg2 VirgilCryptoFoundationVirgilPBKDFAlgorithm)
	GetAlgorithm() (_swig_ret VirgilCryptoFoundationVirgilPBKDFAlgorithm)
	SetHashAlgorithm(arg2 VirgilCryptoFoundationVirgilHashAlgorithm)
	GetHashAlgorithm() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm)
	EnableRecommendationsCheck()
	DisableRecommendationsCheck()
	Derive(a ...interface{}) VirgilByteArray
	ToAsn1() (_swig_ret VirgilByteArray)
	FromAsn1(arg1 VirgilByteArray)
	SwigIsVirgilAsn1Compatible()
	SwigGetVirgilAsn1Compatible() VirgilAsn1Compatible
}

type SwigcptrVirgilRandom uintptr

func (p SwigcptrVirgilRandom) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilRandom) SwigIsVirgilRandom() {
}

func NewVirgilRandom__SWIG_0(arg1 string) (_swig_ret VirgilRandom) {
	var swig_r VirgilRandom
	_swig_i_0 := arg1
	swig_r = (VirgilRandom)(SwigcptrVirgilRandom(C._wrap_new_VirgilRandom__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(*(*C.swig_type_7)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (arg1 SwigcptrVirgilRandom) Randomize__SWIG_0(arg2 uint) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilRandom_randomize__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVirgilRandom) Randomize__SWIG_1() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_VirgilRandom_randomize__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilRandom) Randomize__SWIG_2(arg2 uint, arg3 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (uint)(C._wrap_VirgilRandom_randomize__SWIG_2_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (p SwigcptrVirgilRandom) Randomize(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Randomize__SWIG_1()
	}
	if argc == 1 {
		return p.Randomize__SWIG_0(a[0].(uint))
	}
	if argc == 2 {
		return p.Randomize__SWIG_2(a[0].(uint), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

func DeleteVirgilRandom(arg1 VirgilRandom) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilRandom_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func NewVirgilRandom__SWIG_1(arg1 VirgilRandom) (_swig_ret VirgilRandom) {
	var swig_r VirgilRandom
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilRandom)(SwigcptrVirgilRandom(C._wrap_new_VirgilRandom__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilRandom(a ...interface{}) VirgilRandom {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		return NewVirgilRandom__SWIG_0(a[0].(string))
	}
check_1:
	if argc == 1 {
		return NewVirgilRandom__SWIG_1(a[0].(VirgilRandom))
	}
	panic("No match for overloaded function call")
}

type VirgilRandom interface {
	Swigcptr() uintptr
	SwigIsVirgilRandom()
	Randomize(a ...interface{}) interface{}
}

const VIRGIL_CRYPTO_FEATURE_STREAM_IMPL int = 1
const VIRGIL_CRYPTO_FEATURE_PYTHIA_MT int = 1

type SwigcptrVirgilConfig uintptr

func (p SwigcptrVirgilConfig) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilConfig) SwigIsVirgilConfig() {
}

func VirgilConfigHasFeatureStreamImpl() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_VirgilConfig_hasFeatureStreamImpl_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

func VirgilConfigHasFeaturePythiaImpl() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_VirgilConfig_hasFeaturePythiaImpl_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

func VirgilConfigHasFeaturePythiaMultiThread() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_VirgilConfig_hasFeaturePythiaMultiThread_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

func NewVirgilConfig() (_swig_ret VirgilConfig) {
	var swig_r VirgilConfig
	swig_r = (VirgilConfig)(SwigcptrVirgilConfig(C._wrap_new_VirgilConfig_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func DeleteVirgilConfig(arg1 VirgilConfig) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilConfig_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilConfig interface {
	Swigcptr() uintptr
	SwigIsVirgilConfig()
}

type SwigcptrVirgilCustomParams uintptr

func (p SwigcptrVirgilCustomParams) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilCustomParams) SwigIsVirgilCustomParams() {
}

func (arg1 SwigcptrVirgilCustomParams) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_VirgilCustomParams_isEmpty_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilCustomParams) SetInteger(arg2 VirgilByteArray, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	C._wrap_VirgilCustomParams_setInteger_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrVirgilCustomParams) GetInteger(arg2 VirgilByteArray) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_VirgilCustomParams_getInteger_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVirgilCustomParams) RemoveInteger(arg2 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilCustomParams_removeInteger_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrVirgilCustomParams) SetString(arg2 VirgilByteArray, arg3 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_VirgilCustomParams_setString_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrVirgilCustomParams) GetString(arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilCustomParams_getString_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVirgilCustomParams) RemoveString(arg2 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilCustomParams_removeString_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrVirgilCustomParams) SetData(arg2 VirgilByteArray, arg3 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_VirgilCustomParams_setData_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrVirgilCustomParams) GetData(arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilCustomParams_getData_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVirgilCustomParams) RemoveData(arg2 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilCustomParams_removeData_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrVirgilCustomParams) Clear() {
	_swig_i_0 := arg1
	C._wrap_VirgilCustomParams_clear_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func NewVirgilCustomParams__SWIG_0() (_swig_ret VirgilCustomParams) {
	var swig_r VirgilCustomParams
	swig_r = (VirgilCustomParams)(SwigcptrVirgilCustomParams(C._wrap_new_VirgilCustomParams__SWIG_0_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func NewVirgilCustomParams__SWIG_1(arg1 VirgilCustomParams) (_swig_ret VirgilCustomParams) {
	var swig_r VirgilCustomParams
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilCustomParams)(SwigcptrVirgilCustomParams(C._wrap_new_VirgilCustomParams__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilCustomParams(a ...interface{}) VirgilCustomParams {
	argc := len(a)
	if argc == 0 {
		return NewVirgilCustomParams__SWIG_0()
	}
	if argc == 1 {
		return NewVirgilCustomParams__SWIG_1(a[0].(VirgilCustomParams))
	}
	panic("No match for overloaded function call")
}

func DeleteVirgilCustomParams(arg1 VirgilCustomParams) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilCustomParams_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilCustomParams) ToAsn1() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilCustomParams_toAsn1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrVirgilCustomParams) FromAsn1(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilCustomParams_fromAsn1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (p SwigcptrVirgilCustomParams) SwigIsVirgilAsn1Compatible() {
}

func (p SwigcptrVirgilCustomParams) SwigGetVirgilAsn1Compatible() VirgilAsn1Compatible {
	return SwigcptrVirgilAsn1Compatible(p.Swigcptr())
}

type VirgilCustomParams interface {
	Swigcptr() uintptr
	SwigIsVirgilCustomParams()
	IsEmpty() (_swig_ret bool)
	SetInteger(arg2 VirgilByteArray, arg3 int)
	GetInteger(arg2 VirgilByteArray) (_swig_ret int)
	RemoveInteger(arg2 VirgilByteArray)
	SetString(arg2 VirgilByteArray, arg3 VirgilByteArray)
	GetString(arg2 VirgilByteArray) (_swig_ret VirgilByteArray)
	RemoveString(arg2 VirgilByteArray)
	SetData(arg2 VirgilByteArray, arg3 VirgilByteArray)
	GetData(arg2 VirgilByteArray) (_swig_ret VirgilByteArray)
	RemoveData(arg2 VirgilByteArray)
	Clear()
	ToAsn1() (_swig_ret VirgilByteArray)
	FromAsn1(arg1 VirgilByteArray)
	SwigIsVirgilAsn1Compatible()
	SwigGetVirgilAsn1Compatible() VirgilAsn1Compatible
}

type SwigcptrVirgilCipherBase uintptr

func (p SwigcptrVirgilCipherBase) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilCipherBase) SwigIsVirgilCipherBase() {
}

func NewVirgilCipherBase() (_swig_ret VirgilCipherBase) {
	var swig_r VirgilCipherBase
	swig_r = (VirgilCipherBase)(SwigcptrVirgilCipherBase(C._wrap_new_VirgilCipherBase_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func (arg1 SwigcptrVirgilCipherBase) AddKeyRecipient(arg2 VirgilByteArray, arg3 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_VirgilCipherBase_addKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrVirgilCipherBase) RemoveKeyRecipient(arg2 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilCipherBase_removeKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrVirgilCipherBase) KeyRecipientExists(arg2 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilCipherBase_keyRecipientExists_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVirgilCipherBase) AddPasswordRecipient(arg2 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilCipherBase_addPasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrVirgilCipherBase) RemovePasswordRecipient(arg2 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilCipherBase_removePasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrVirgilCipherBase) PasswordRecipientExists(arg2 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilCipherBase_passwordRecipientExists_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVirgilCipherBase) RemoveAllRecipients() {
	_swig_i_0 := arg1
	C._wrap_VirgilCipherBase_removeAllRecipients_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVirgilCipherBase) GetContentInfo() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilCipherBase_getContentInfo_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilCipherBase) SetContentInfo(arg2 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilCipherBase_setContentInfo_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func VirgilCipherBaseDefineContentInfoSize(arg1 VirgilByteArray) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (uint)(C._wrap_VirgilCipherBase_defineContentInfoSize_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilCipherBase) CustomParams__SWIG_0() (_swig_ret VirgilCustomParams) {
	var swig_r VirgilCustomParams
	_swig_i_0 := arg1
	swig_r = (VirgilCustomParams)(SwigcptrVirgilCustomParams(C._wrap_VirgilCipherBase_customParams__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilCipherBase) CustomParams__SWIG_1() (_swig_ret VirgilCustomParams) {
	var swig_r VirgilCustomParams
	_swig_i_0 := arg1
	swig_r = (VirgilCustomParams)(SwigcptrVirgilCustomParams(C._wrap_VirgilCipherBase_customParams__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrVirgilCipherBase) CustomParams(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.CustomParams__SWIG_0()
	}
	if argc == 0 {
		return p.CustomParams__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func VirgilCipherBaseComputeShared__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilCipherBase_computeShared__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func VirgilCipherBaseComputeShared__SWIG_1(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilCipherBase_computeShared__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func VirgilCipherBaseComputeShared(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 2 {
		return VirgilCipherBaseComputeShared__SWIG_1(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	if argc == 3 {
		return VirgilCipherBaseComputeShared__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func DeleteVirgilCipherBase(arg1 VirgilCipherBase) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilCipherBase_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilCipherBase interface {
	Swigcptr() uintptr
	SwigIsVirgilCipherBase()
	AddKeyRecipient(arg2 VirgilByteArray, arg3 VirgilByteArray)
	RemoveKeyRecipient(arg2 VirgilByteArray)
	KeyRecipientExists(arg2 VirgilByteArray) (_swig_ret bool)
	AddPasswordRecipient(arg2 VirgilByteArray)
	RemovePasswordRecipient(arg2 VirgilByteArray)
	PasswordRecipientExists(arg2 VirgilByteArray) (_swig_ret bool)
	RemoveAllRecipients()
	GetContentInfo() (_swig_ret VirgilByteArray)
	SetContentInfo(arg2 VirgilByteArray)
	CustomParams(a ...interface{}) interface{}
}

type SwigcptrVirgilCipher uintptr

func (p SwigcptrVirgilCipher) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilCipher) SwigIsVirgilCipher() {
}

func (arg1 SwigcptrVirgilCipher) Encrypt__SWIG_0(arg2 VirgilByteArray, arg3 bool) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilCipher_encrypt__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrVirgilCipher) Encrypt__SWIG_1(arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilCipher_encrypt__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrVirgilCipher) Encrypt(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 1 {
		return p.Encrypt__SWIG_1(a[0].(VirgilByteArray))
	}
	if argc == 2 {
		return p.Encrypt__SWIG_0(a[0].(VirgilByteArray), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilCipher) DecryptWithKey__SWIG_0(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray, arg5 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilCipher_decryptWithKey__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrVirgilCipher) DecryptWithKey__SWIG_1(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilCipher_decryptWithKey__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (p SwigcptrVirgilCipher) DecryptWithKey(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 3 {
		return p.DecryptWithKey__SWIG_1(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
	}
	if argc == 4 {
		return p.DecryptWithKey__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray), a[3].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilCipher) DecryptWithPassword(arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilCipher_decryptWithPassword_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func NewVirgilCipher() (_swig_ret VirgilCipher) {
	var swig_r VirgilCipher
	swig_r = (VirgilCipher)(SwigcptrVirgilCipher(C._wrap_new_VirgilCipher_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func DeleteVirgilCipher(arg1 VirgilCipher) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilCipher_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilCipher) AddKeyRecipient(arg1 VirgilByteArray, arg2 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilCipher_addKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrVirgilCipher) RemoveKeyRecipient(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilCipher_removeKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilCipher) KeyRecipientExists(arg1 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilCipher_keyRecipientExists_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrVirgilCipher) AddPasswordRecipient(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilCipher_addPasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilCipher) RemovePasswordRecipient(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilCipher_removePasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilCipher) PasswordRecipientExists(arg1 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilCipher_passwordRecipientExists_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrVirgilCipher) RemoveAllRecipients() {
	C._wrap_VirgilCipher_removeAllRecipients_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrVirgilCipher) GetContentInfo() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilCipher_getContentInfo_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrVirgilCipher) SetContentInfo(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilCipher_setContentInfo_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func VirgilCipherDefineContentInfoSize(arg1 VirgilByteArray) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (uint)(C._wrap_VirgilCipher_defineContentInfoSize_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrVirgilCipher) CustomParams__SWIG_0() (_swig_ret VirgilCustomParams) {
	var swig_r VirgilCustomParams
	swig_r = (VirgilCustomParams)(SwigcptrVirgilCustomParams(C._wrap_VirgilCipher_customParams__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrVirgilCipher) CustomParams__SWIG_1() (_swig_ret VirgilCustomParams) {
	var swig_r VirgilCustomParams
	swig_r = (VirgilCustomParams)(SwigcptrVirgilCustomParams(C._wrap_VirgilCipher_customParams__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrVirgilCipher) CustomParams(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.CustomParams__SWIG_0()
	}
	if argc == 0 {
		return p.CustomParams__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func VirgilCipherComputeShared__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilCipher_computeShared__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func VirgilCipherComputeShared__SWIG_1(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilCipher_computeShared__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func VirgilCipherComputeShared(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 2 {
		return VirgilCipherComputeShared__SWIG_1(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	if argc == 3 {
		return VirgilCipherComputeShared__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (p SwigcptrVirgilCipher) SwigIsVirgilCipherBase() {
}

func (p SwigcptrVirgilCipher) SwigGetVirgilCipherBase() VirgilCipherBase {
	return SwigcptrVirgilCipherBase(p.Swigcptr())
}

type VirgilCipher interface {
	Swigcptr() uintptr
	SwigIsVirgilCipher()
	Encrypt(a ...interface{}) VirgilByteArray
	DecryptWithKey(a ...interface{}) VirgilByteArray
	DecryptWithPassword(arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray)
	AddKeyRecipient(arg1 VirgilByteArray, arg2 VirgilByteArray)
	RemoveKeyRecipient(arg1 VirgilByteArray)
	KeyRecipientExists(arg1 VirgilByteArray) (_swig_ret bool)
	AddPasswordRecipient(arg1 VirgilByteArray)
	RemovePasswordRecipient(arg1 VirgilByteArray)
	PasswordRecipientExists(arg1 VirgilByteArray) (_swig_ret bool)
	RemoveAllRecipients()
	GetContentInfo() (_swig_ret VirgilByteArray)
	SetContentInfo(arg1 VirgilByteArray)
	CustomParams(a ...interface{}) interface{}
	SwigIsVirgilCipherBase()
	SwigGetVirgilCipherBase() VirgilCipherBase
}

type SwigcptrVirgilChunkCipher uintptr

func (p SwigcptrVirgilChunkCipher) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilChunkCipher) SwigIsVirgilChunkCipher() {
}

func _swig_getVirgilChunkCipher_VirgilChunkCipher_kPreferredChunkSize_VirgilChunkCipher() (_swig_ret uint) {
	var swig_r uint
	swig_r = (uint)(C._wrap_VirgilChunkCipher_kPreferredChunkSize_VirgilChunkCipher_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilChunkCipherKPreferredChunkSize uint = _swig_getVirgilChunkCipher_VirgilChunkCipher_kPreferredChunkSize_VirgilChunkCipher()

func (arg1 SwigcptrVirgilChunkCipher) Encrypt__SWIG_0(arg2 VirgilDataSource, arg3 VirgilDataSink, arg4 bool, arg5 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_VirgilChunkCipher_encrypt__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3), C.swig_intgo(_swig_i_4))
}

func (arg1 SwigcptrVirgilChunkCipher) Encrypt__SWIG_1(arg2 VirgilDataSource, arg3 VirgilDataSink, arg4 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	C._wrap_VirgilChunkCipher_encrypt__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3))
}

func (arg1 SwigcptrVirgilChunkCipher) Encrypt__SWIG_2(arg2 VirgilDataSource, arg3 VirgilDataSink) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_VirgilChunkCipher_encrypt__SWIG_2_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (p SwigcptrVirgilChunkCipher) Encrypt(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.Encrypt__SWIG_2(a[0].(VirgilDataSource), a[1].(VirgilDataSink))
		return
	}
	if argc == 3 {
		p.Encrypt__SWIG_1(a[0].(VirgilDataSource), a[1].(VirgilDataSink), a[2].(bool))
		return
	}
	if argc == 4 {
		p.Encrypt__SWIG_0(a[0].(VirgilDataSource), a[1].(VirgilDataSink), a[2].(bool), a[3].(uint))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilChunkCipher) DecryptWithKey__SWIG_0(arg2 VirgilDataSource, arg3 VirgilDataSink, arg4 VirgilByteArray, arg5 VirgilByteArray, arg6 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	C._wrap_VirgilChunkCipher_decryptWithKey__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5))
}

func (arg1 SwigcptrVirgilChunkCipher) DecryptWithKey__SWIG_1(arg2 VirgilDataSource, arg3 VirgilDataSink, arg4 VirgilByteArray, arg5 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	C._wrap_VirgilChunkCipher_decryptWithKey__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))
}

func (p SwigcptrVirgilChunkCipher) DecryptWithKey(a ...interface{}) {
	argc := len(a)
	if argc == 4 {
		p.DecryptWithKey__SWIG_1(a[0].(VirgilDataSource), a[1].(VirgilDataSink), a[2].(VirgilByteArray), a[3].(VirgilByteArray))
		return
	}
	if argc == 5 {
		p.DecryptWithKey__SWIG_0(a[0].(VirgilDataSource), a[1].(VirgilDataSink), a[2].(VirgilByteArray), a[3].(VirgilByteArray), a[4].(VirgilByteArray))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilChunkCipher) DecryptWithPassword(arg2 VirgilDataSource, arg3 VirgilDataSink, arg4 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	C._wrap_VirgilChunkCipher_decryptWithPassword_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func NewVirgilChunkCipher() (_swig_ret VirgilChunkCipher) {
	var swig_r VirgilChunkCipher
	swig_r = (VirgilChunkCipher)(SwigcptrVirgilChunkCipher(C._wrap_new_VirgilChunkCipher_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func DeleteVirgilChunkCipher(arg1 VirgilChunkCipher) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilChunkCipher_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilChunkCipher) AddKeyRecipient(arg1 VirgilByteArray, arg2 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilChunkCipher_addKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrVirgilChunkCipher) RemoveKeyRecipient(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilChunkCipher_removeKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilChunkCipher) KeyRecipientExists(arg1 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilChunkCipher_keyRecipientExists_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrVirgilChunkCipher) AddPasswordRecipient(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilChunkCipher_addPasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilChunkCipher) RemovePasswordRecipient(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilChunkCipher_removePasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilChunkCipher) PasswordRecipientExists(arg1 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilChunkCipher_passwordRecipientExists_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrVirgilChunkCipher) RemoveAllRecipients() {
	C._wrap_VirgilChunkCipher_removeAllRecipients_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrVirgilChunkCipher) GetContentInfo() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilChunkCipher_getContentInfo_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrVirgilChunkCipher) SetContentInfo(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilChunkCipher_setContentInfo_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func VirgilChunkCipherDefineContentInfoSize(arg1 VirgilByteArray) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (uint)(C._wrap_VirgilChunkCipher_defineContentInfoSize_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrVirgilChunkCipher) CustomParams__SWIG_0() (_swig_ret VirgilCustomParams) {
	var swig_r VirgilCustomParams
	swig_r = (VirgilCustomParams)(SwigcptrVirgilCustomParams(C._wrap_VirgilChunkCipher_customParams__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrVirgilChunkCipher) CustomParams__SWIG_1() (_swig_ret VirgilCustomParams) {
	var swig_r VirgilCustomParams
	swig_r = (VirgilCustomParams)(SwigcptrVirgilCustomParams(C._wrap_VirgilChunkCipher_customParams__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrVirgilChunkCipher) CustomParams(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.CustomParams__SWIG_0()
	}
	if argc == 0 {
		return p.CustomParams__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func VirgilChunkCipherComputeShared__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilChunkCipher_computeShared__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func VirgilChunkCipherComputeShared__SWIG_1(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilChunkCipher_computeShared__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func VirgilChunkCipherComputeShared(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 2 {
		return VirgilChunkCipherComputeShared__SWIG_1(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	if argc == 3 {
		return VirgilChunkCipherComputeShared__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (p SwigcptrVirgilChunkCipher) SwigIsVirgilCipherBase() {
}

func (p SwigcptrVirgilChunkCipher) SwigGetVirgilCipherBase() VirgilCipherBase {
	return SwigcptrVirgilCipherBase(p.Swigcptr())
}

type VirgilChunkCipher interface {
	Swigcptr() uintptr
	SwigIsVirgilChunkCipher()
	Encrypt(a ...interface{})
	DecryptWithKey(a ...interface{})
	DecryptWithPassword(arg2 VirgilDataSource, arg3 VirgilDataSink, arg4 VirgilByteArray)
	AddKeyRecipient(arg1 VirgilByteArray, arg2 VirgilByteArray)
	RemoveKeyRecipient(arg1 VirgilByteArray)
	KeyRecipientExists(arg1 VirgilByteArray) (_swig_ret bool)
	AddPasswordRecipient(arg1 VirgilByteArray)
	RemovePasswordRecipient(arg1 VirgilByteArray)
	PasswordRecipientExists(arg1 VirgilByteArray) (_swig_ret bool)
	RemoveAllRecipients()
	GetContentInfo() (_swig_ret VirgilByteArray)
	SetContentInfo(arg1 VirgilByteArray)
	CustomParams(a ...interface{}) interface{}
	SwigIsVirgilCipherBase()
	SwigGetVirgilCipherBase() VirgilCipherBase
}

type SwigcptrVirgilSeqCipher uintptr

func (p SwigcptrVirgilSeqCipher) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilSeqCipher) SwigIsVirgilSeqCipher() {
}

func (arg1 SwigcptrVirgilSeqCipher) StartEncryption() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilSeqCipher_startEncryption_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilSeqCipher) StartDecryptionWithKey__SWIG_0(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	C._wrap_VirgilSeqCipher_startDecryptionWithKey__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func (arg1 SwigcptrVirgilSeqCipher) StartDecryptionWithKey__SWIG_1(arg2 VirgilByteArray, arg3 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_VirgilSeqCipher_startDecryptionWithKey__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (p SwigcptrVirgilSeqCipher) StartDecryptionWithKey(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.StartDecryptionWithKey__SWIG_1(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
		return
	}
	if argc == 3 {
		p.StartDecryptionWithKey__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilSeqCipher) StartDecryptionWithPassword(arg2 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilSeqCipher_startDecryptionWithPassword_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrVirgilSeqCipher) Process(arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilSeqCipher_process_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVirgilSeqCipher) Finish() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilSeqCipher_finish_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilSeqCipher() (_swig_ret VirgilSeqCipher) {
	var swig_r VirgilSeqCipher
	swig_r = (VirgilSeqCipher)(SwigcptrVirgilSeqCipher(C._wrap_new_VirgilSeqCipher_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func DeleteVirgilSeqCipher(arg1 VirgilSeqCipher) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilSeqCipher_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilSeqCipher) AddKeyRecipient(arg1 VirgilByteArray, arg2 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilSeqCipher_addKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrVirgilSeqCipher) RemoveKeyRecipient(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilSeqCipher_removeKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilSeqCipher) KeyRecipientExists(arg1 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilSeqCipher_keyRecipientExists_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrVirgilSeqCipher) AddPasswordRecipient(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilSeqCipher_addPasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilSeqCipher) RemovePasswordRecipient(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilSeqCipher_removePasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilSeqCipher) PasswordRecipientExists(arg1 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilSeqCipher_passwordRecipientExists_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrVirgilSeqCipher) RemoveAllRecipients() {
	C._wrap_VirgilSeqCipher_removeAllRecipients_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrVirgilSeqCipher) GetContentInfo() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilSeqCipher_getContentInfo_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrVirgilSeqCipher) SetContentInfo(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilSeqCipher_setContentInfo_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func VirgilSeqCipherDefineContentInfoSize(arg1 VirgilByteArray) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (uint)(C._wrap_VirgilSeqCipher_defineContentInfoSize_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrVirgilSeqCipher) CustomParams__SWIG_0() (_swig_ret VirgilCustomParams) {
	var swig_r VirgilCustomParams
	swig_r = (VirgilCustomParams)(SwigcptrVirgilCustomParams(C._wrap_VirgilSeqCipher_customParams__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrVirgilSeqCipher) CustomParams__SWIG_1() (_swig_ret VirgilCustomParams) {
	var swig_r VirgilCustomParams
	swig_r = (VirgilCustomParams)(SwigcptrVirgilCustomParams(C._wrap_VirgilSeqCipher_customParams__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrVirgilSeqCipher) CustomParams(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.CustomParams__SWIG_0()
	}
	if argc == 0 {
		return p.CustomParams__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func VirgilSeqCipherComputeShared__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilSeqCipher_computeShared__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func VirgilSeqCipherComputeShared__SWIG_1(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilSeqCipher_computeShared__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func VirgilSeqCipherComputeShared(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 2 {
		return VirgilSeqCipherComputeShared__SWIG_1(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	if argc == 3 {
		return VirgilSeqCipherComputeShared__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (p SwigcptrVirgilSeqCipher) SwigIsVirgilCipherBase() {
}

func (p SwigcptrVirgilSeqCipher) SwigGetVirgilCipherBase() VirgilCipherBase {
	return SwigcptrVirgilCipherBase(p.Swigcptr())
}

type VirgilSeqCipher interface {
	Swigcptr() uintptr
	SwigIsVirgilSeqCipher()
	StartEncryption() (_swig_ret VirgilByteArray)
	StartDecryptionWithKey(a ...interface{})
	StartDecryptionWithPassword(arg2 VirgilByteArray)
	Process(arg2 VirgilByteArray) (_swig_ret VirgilByteArray)
	Finish() (_swig_ret VirgilByteArray)
	AddKeyRecipient(arg1 VirgilByteArray, arg2 VirgilByteArray)
	RemoveKeyRecipient(arg1 VirgilByteArray)
	KeyRecipientExists(arg1 VirgilByteArray) (_swig_ret bool)
	AddPasswordRecipient(arg1 VirgilByteArray)
	RemovePasswordRecipient(arg1 VirgilByteArray)
	PasswordRecipientExists(arg1 VirgilByteArray) (_swig_ret bool)
	RemoveAllRecipients()
	GetContentInfo() (_swig_ret VirgilByteArray)
	SetContentInfo(arg1 VirgilByteArray)
	CustomParams(a ...interface{}) interface{}
	SwigIsVirgilCipherBase()
	SwigGetVirgilCipherBase() VirgilCipherBase
}

type SwigcptrVirgilSignerBase uintptr

func (p SwigcptrVirgilSignerBase) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilSignerBase) SwigIsVirgilSignerBase() {
}

func NewVirgilSignerBase__SWIG_0(arg1 VirgilCryptoFoundationVirgilHashAlgorithm) (_swig_ret VirgilSignerBase) {
	var swig_r VirgilSignerBase
	_swig_i_0 := arg1
	swig_r = (VirgilSignerBase)(SwigcptrVirgilSignerBase(C._wrap_new_VirgilSignerBase__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewVirgilSignerBase__SWIG_1() (_swig_ret VirgilSignerBase) {
	var swig_r VirgilSignerBase
	swig_r = (VirgilSignerBase)(SwigcptrVirgilSignerBase(C._wrap_new_VirgilSignerBase__SWIG_1_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func NewVirgilSignerBase(a ...interface{}) VirgilSignerBase {
	argc := len(a)
	if argc == 0 {
		return NewVirgilSignerBase__SWIG_1()
	}
	if argc == 1 {
		return NewVirgilSignerBase__SWIG_0(a[0].(VirgilCryptoFoundationVirgilHashAlgorithm))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilSignerBase) GetHashAlgorithm() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm) {
	var swig_r VirgilCryptoFoundationVirgilHashAlgorithm
	_swig_i_0 := arg1
	swig_r = (VirgilCryptoFoundationVirgilHashAlgorithm)(C._wrap_VirgilSignerBase_getHashAlgorithm_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilSignerBase) SignHash__SWIG_0(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilSignerBase_signHash__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrVirgilSignerBase) SignHash__SWIG_1(arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilSignerBase_signHash__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrVirgilSignerBase) SignHash(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 2 {
		return p.SignHash__SWIG_1(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	if argc == 3 {
		return p.SignHash__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilSignerBase) VerifyHash(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilSignerBase_verifyHash_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3)))
	return swig_r
}

func DeleteVirgilSignerBase(arg1 VirgilSignerBase) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilSignerBase_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilSignerBase interface {
	Swigcptr() uintptr
	SwigIsVirgilSignerBase()
	GetHashAlgorithm() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm)
	SignHash(a ...interface{}) VirgilByteArray
	VerifyHash(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray) (_swig_ret bool)
}

type SwigcptrVirgilSigner uintptr

func (p SwigcptrVirgilSigner) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilSigner) SwigIsVirgilSigner() {
}

func NewVirgilSigner__SWIG_0(arg1 VirgilCryptoFoundationVirgilHashAlgorithm) (_swig_ret VirgilSigner) {
	var swig_r VirgilSigner
	_swig_i_0 := arg1
	swig_r = (VirgilSigner)(SwigcptrVirgilSigner(C._wrap_new_VirgilSigner__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewVirgilSigner__SWIG_1() (_swig_ret VirgilSigner) {
	var swig_r VirgilSigner
	swig_r = (VirgilSigner)(SwigcptrVirgilSigner(C._wrap_new_VirgilSigner__SWIG_1_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func NewVirgilSigner(a ...interface{}) VirgilSigner {
	argc := len(a)
	if argc == 0 {
		return NewVirgilSigner__SWIG_1()
	}
	if argc == 1 {
		return NewVirgilSigner__SWIG_0(a[0].(VirgilCryptoFoundationVirgilHashAlgorithm))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilSigner) Sign__SWIG_0(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilSigner_sign__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrVirgilSigner) Sign__SWIG_1(arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilSigner_sign__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrVirgilSigner) Sign(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 2 {
		return p.Sign__SWIG_1(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	if argc == 3 {
		return p.Sign__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilSigner) Verify(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilSigner_verify_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3)))
	return swig_r
}

func DeleteVirgilSigner(arg1 VirgilSigner) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilSigner_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilSigner) GetHashAlgorithm() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm) {
	var swig_r VirgilCryptoFoundationVirgilHashAlgorithm
	swig_r = (VirgilCryptoFoundationVirgilHashAlgorithm)(C._wrap_VirgilSigner_getHashAlgorithm_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrVirgilSigner) SignHash__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilSigner_signHash__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (_swig_base SwigcptrVirgilSigner) SignHash__SWIG_1(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilSigner_signHash__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrVirgilSigner) SignHash(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 2 {
		return p.SignHash__SWIG_1(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	if argc == 3 {
		return p.SignHash__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrVirgilSigner) VerifyHash(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilSigner_verifyHash_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (p SwigcptrVirgilSigner) SwigIsVirgilSignerBase() {
}

func (p SwigcptrVirgilSigner) SwigGetVirgilSignerBase() VirgilSignerBase {
	return SwigcptrVirgilSignerBase(p.Swigcptr())
}

type VirgilSigner interface {
	Swigcptr() uintptr
	SwigIsVirgilSigner()
	Sign(a ...interface{}) VirgilByteArray
	Verify(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray) (_swig_ret bool)
	GetHashAlgorithm() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm)
	SignHash(a ...interface{}) VirgilByteArray
	VerifyHash(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret bool)
	SwigIsVirgilSignerBase()
	SwigGetVirgilSignerBase() VirgilSignerBase
}

type SwigcptrVirgilSeqSigner uintptr

func (p SwigcptrVirgilSeqSigner) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilSeqSigner) SwigIsVirgilSeqSigner() {
}

func NewVirgilSeqSigner__SWIG_0(arg1 VirgilCryptoFoundationVirgilHashAlgorithm) (_swig_ret VirgilSeqSigner) {
	var swig_r VirgilSeqSigner
	_swig_i_0 := arg1
	swig_r = (VirgilSeqSigner)(SwigcptrVirgilSeqSigner(C._wrap_new_VirgilSeqSigner__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewVirgilSeqSigner__SWIG_1() (_swig_ret VirgilSeqSigner) {
	var swig_r VirgilSeqSigner
	swig_r = (VirgilSeqSigner)(SwigcptrVirgilSeqSigner(C._wrap_new_VirgilSeqSigner__SWIG_1_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func NewVirgilSeqSigner(a ...interface{}) VirgilSeqSigner {
	argc := len(a)
	if argc == 0 {
		return NewVirgilSeqSigner__SWIG_1()
	}
	if argc == 1 {
		return NewVirgilSeqSigner__SWIG_0(a[0].(VirgilCryptoFoundationVirgilHashAlgorithm))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilSeqSigner) StartSigning() {
	_swig_i_0 := arg1
	C._wrap_VirgilSeqSigner_startSigning_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVirgilSeqSigner) StartVerifying(arg2 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilSeqSigner_startVerifying_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrVirgilSeqSigner) Update(arg2 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilSeqSigner_update_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrVirgilSeqSigner) Sign__SWIG_0(arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilSeqSigner_sign__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrVirgilSeqSigner) Sign__SWIG_1(arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilSeqSigner_sign__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrVirgilSeqSigner) Sign(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 1 {
		return p.Sign__SWIG_1(a[0].(VirgilByteArray))
	}
	if argc == 2 {
		return p.Sign__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilSeqSigner) Verify(arg2 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilSeqSigner_verify_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func DeleteVirgilSeqSigner(arg1 VirgilSeqSigner) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilSeqSigner_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilSeqSigner) GetHashAlgorithm() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm) {
	var swig_r VirgilCryptoFoundationVirgilHashAlgorithm
	swig_r = (VirgilCryptoFoundationVirgilHashAlgorithm)(C._wrap_VirgilSeqSigner_getHashAlgorithm_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrVirgilSeqSigner) SignHash__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilSeqSigner_signHash__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (_swig_base SwigcptrVirgilSeqSigner) SignHash__SWIG_1(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilSeqSigner_signHash__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrVirgilSeqSigner) SignHash(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 2 {
		return p.SignHash__SWIG_1(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	if argc == 3 {
		return p.SignHash__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrVirgilSeqSigner) VerifyHash(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilSeqSigner_verifyHash_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (p SwigcptrVirgilSeqSigner) SwigIsVirgilSignerBase() {
}

func (p SwigcptrVirgilSeqSigner) SwigGetVirgilSignerBase() VirgilSignerBase {
	return SwigcptrVirgilSignerBase(p.Swigcptr())
}

type VirgilSeqSigner interface {
	Swigcptr() uintptr
	SwigIsVirgilSeqSigner()
	StartSigning()
	StartVerifying(arg2 VirgilByteArray)
	Update(arg2 VirgilByteArray)
	Sign(a ...interface{}) VirgilByteArray
	Verify(arg2 VirgilByteArray) (_swig_ret bool)
	GetHashAlgorithm() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm)
	SignHash(a ...interface{}) VirgilByteArray
	VerifyHash(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret bool)
	SwigIsVirgilSignerBase()
	SwigGetVirgilSignerBase() VirgilSignerBase
}

type SwigcptrVirgilStreamSigner uintptr

func (p SwigcptrVirgilStreamSigner) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilStreamSigner) SwigIsVirgilStreamSigner() {
}

func NewVirgilStreamSigner__SWIG_0(arg1 VirgilCryptoFoundationVirgilHashAlgorithm) (_swig_ret VirgilStreamSigner) {
	var swig_r VirgilStreamSigner
	_swig_i_0 := arg1
	swig_r = (VirgilStreamSigner)(SwigcptrVirgilStreamSigner(C._wrap_new_VirgilStreamSigner__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewVirgilStreamSigner__SWIG_1() (_swig_ret VirgilStreamSigner) {
	var swig_r VirgilStreamSigner
	swig_r = (VirgilStreamSigner)(SwigcptrVirgilStreamSigner(C._wrap_new_VirgilStreamSigner__SWIG_1_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func NewVirgilStreamSigner(a ...interface{}) VirgilStreamSigner {
	argc := len(a)
	if argc == 0 {
		return NewVirgilStreamSigner__SWIG_1()
	}
	if argc == 1 {
		return NewVirgilStreamSigner__SWIG_0(a[0].(VirgilCryptoFoundationVirgilHashAlgorithm))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilStreamSigner) Sign__SWIG_0(arg2 VirgilDataSource, arg3 VirgilByteArray, arg4 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilStreamSigner_sign__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrVirgilStreamSigner) Sign__SWIG_1(arg2 VirgilDataSource, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilStreamSigner_sign__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrVirgilStreamSigner) Sign(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 2 {
		return p.Sign__SWIG_1(a[0].(VirgilDataSource), a[1].(VirgilByteArray))
	}
	if argc == 3 {
		return p.Sign__SWIG_0(a[0].(VirgilDataSource), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilStreamSigner) Verify(arg2 VirgilDataSource, arg3 VirgilByteArray, arg4 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilStreamSigner_verify_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3)))
	return swig_r
}

func DeleteVirgilStreamSigner(arg1 VirgilStreamSigner) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilStreamSigner_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilStreamSigner) GetHashAlgorithm() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm) {
	var swig_r VirgilCryptoFoundationVirgilHashAlgorithm
	swig_r = (VirgilCryptoFoundationVirgilHashAlgorithm)(C._wrap_VirgilStreamSigner_getHashAlgorithm_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrVirgilStreamSigner) SignHash__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilStreamSigner_signHash__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (_swig_base SwigcptrVirgilStreamSigner) SignHash__SWIG_1(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilStreamSigner_signHash__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrVirgilStreamSigner) SignHash(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 2 {
		return p.SignHash__SWIG_1(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	if argc == 3 {
		return p.SignHash__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrVirgilStreamSigner) VerifyHash(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilStreamSigner_verifyHash_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (p SwigcptrVirgilStreamSigner) SwigIsVirgilSignerBase() {
}

func (p SwigcptrVirgilStreamSigner) SwigGetVirgilSignerBase() VirgilSignerBase {
	return SwigcptrVirgilSignerBase(p.Swigcptr())
}

type VirgilStreamSigner interface {
	Swigcptr() uintptr
	SwigIsVirgilStreamSigner()
	Sign(a ...interface{}) VirgilByteArray
	Verify(arg2 VirgilDataSource, arg3 VirgilByteArray, arg4 VirgilByteArray) (_swig_ret bool)
	GetHashAlgorithm() (_swig_ret VirgilCryptoFoundationVirgilHashAlgorithm)
	SignHash(a ...interface{}) VirgilByteArray
	VerifyHash(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret bool)
	SwigIsVirgilSignerBase()
	SwigGetVirgilSignerBase() VirgilSignerBase
}

type SwigcptrVirgilStreamCipher uintptr

func (p SwigcptrVirgilStreamCipher) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilStreamCipher) SwigIsVirgilStreamCipher() {
}

func (arg1 SwigcptrVirgilStreamCipher) Encrypt__SWIG_0(arg2 VirgilDataSource, arg3 VirgilDataSink, arg4 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	C._wrap_VirgilStreamCipher_encrypt__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3))
}

func (arg1 SwigcptrVirgilStreamCipher) Encrypt__SWIG_1(arg2 VirgilDataSource, arg3 VirgilDataSink) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_VirgilStreamCipher_encrypt__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (p SwigcptrVirgilStreamCipher) Encrypt(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.Encrypt__SWIG_1(a[0].(VirgilDataSource), a[1].(VirgilDataSink))
		return
	}
	if argc == 3 {
		p.Encrypt__SWIG_0(a[0].(VirgilDataSource), a[1].(VirgilDataSink), a[2].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilStreamCipher) DecryptWithKey__SWIG_0(arg2 VirgilDataSource, arg3 VirgilDataSink, arg4 VirgilByteArray, arg5 VirgilByteArray, arg6 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	C._wrap_VirgilStreamCipher_decryptWithKey__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5))
}

func (arg1 SwigcptrVirgilStreamCipher) DecryptWithKey__SWIG_1(arg2 VirgilDataSource, arg3 VirgilDataSink, arg4 VirgilByteArray, arg5 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	C._wrap_VirgilStreamCipher_decryptWithKey__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))
}

func (p SwigcptrVirgilStreamCipher) DecryptWithKey(a ...interface{}) {
	argc := len(a)
	if argc == 4 {
		p.DecryptWithKey__SWIG_1(a[0].(VirgilDataSource), a[1].(VirgilDataSink), a[2].(VirgilByteArray), a[3].(VirgilByteArray))
		return
	}
	if argc == 5 {
		p.DecryptWithKey__SWIG_0(a[0].(VirgilDataSource), a[1].(VirgilDataSink), a[2].(VirgilByteArray), a[3].(VirgilByteArray), a[4].(VirgilByteArray))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilStreamCipher) DecryptWithPassword(arg2 VirgilDataSource, arg3 VirgilDataSink, arg4 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	C._wrap_VirgilStreamCipher_decryptWithPassword_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func NewVirgilStreamCipher() (_swig_ret VirgilStreamCipher) {
	var swig_r VirgilStreamCipher
	swig_r = (VirgilStreamCipher)(SwigcptrVirgilStreamCipher(C._wrap_new_VirgilStreamCipher_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func DeleteVirgilStreamCipher(arg1 VirgilStreamCipher) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilStreamCipher_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilStreamCipher) AddKeyRecipient(arg1 VirgilByteArray, arg2 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilStreamCipher_addKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (_swig_base SwigcptrVirgilStreamCipher) RemoveKeyRecipient(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilStreamCipher_removeKeyRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilStreamCipher) KeyRecipientExists(arg1 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilStreamCipher_keyRecipientExists_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrVirgilStreamCipher) AddPasswordRecipient(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilStreamCipher_addPasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilStreamCipher) RemovePasswordRecipient(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilStreamCipher_removePasswordRecipient_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrVirgilStreamCipher) PasswordRecipientExists(arg1 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilStreamCipher_passwordRecipientExists_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrVirgilStreamCipher) RemoveAllRecipients() {
	C._wrap_VirgilStreamCipher_removeAllRecipients_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrVirgilStreamCipher) GetContentInfo() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilStreamCipher_getContentInfo_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrVirgilStreamCipher) SetContentInfo(arg1 VirgilByteArray) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_VirgilStreamCipher_setContentInfo_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func VirgilStreamCipherDefineContentInfoSize(arg1 VirgilByteArray) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (uint)(C._wrap_VirgilStreamCipher_defineContentInfoSize_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrVirgilStreamCipher) CustomParams__SWIG_0() (_swig_ret VirgilCustomParams) {
	var swig_r VirgilCustomParams
	swig_r = (VirgilCustomParams)(SwigcptrVirgilCustomParams(C._wrap_VirgilStreamCipher_customParams__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrVirgilStreamCipher) CustomParams__SWIG_1() (_swig_ret VirgilCustomParams) {
	var swig_r VirgilCustomParams
	swig_r = (VirgilCustomParams)(SwigcptrVirgilCustomParams(C._wrap_VirgilStreamCipher_customParams__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrVirgilStreamCipher) CustomParams(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.CustomParams__SWIG_0()
	}
	if argc == 0 {
		return p.CustomParams__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func VirgilStreamCipherComputeShared__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilStreamCipher_computeShared__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func VirgilStreamCipherComputeShared__SWIG_1(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilStreamCipher_computeShared__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func VirgilStreamCipherComputeShared(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 2 {
		return VirgilStreamCipherComputeShared__SWIG_1(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	if argc == 3 {
		return VirgilStreamCipherComputeShared__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (p SwigcptrVirgilStreamCipher) SwigIsVirgilCipherBase() {
}

func (p SwigcptrVirgilStreamCipher) SwigGetVirgilCipherBase() VirgilCipherBase {
	return SwigcptrVirgilCipherBase(p.Swigcptr())
}

type VirgilStreamCipher interface {
	Swigcptr() uintptr
	SwigIsVirgilStreamCipher()
	Encrypt(a ...interface{})
	DecryptWithKey(a ...interface{})
	DecryptWithPassword(arg2 VirgilDataSource, arg3 VirgilDataSink, arg4 VirgilByteArray)
	AddKeyRecipient(arg1 VirgilByteArray, arg2 VirgilByteArray)
	RemoveKeyRecipient(arg1 VirgilByteArray)
	KeyRecipientExists(arg1 VirgilByteArray) (_swig_ret bool)
	AddPasswordRecipient(arg1 VirgilByteArray)
	RemovePasswordRecipient(arg1 VirgilByteArray)
	PasswordRecipientExists(arg1 VirgilByteArray) (_swig_ret bool)
	RemoveAllRecipients()
	GetContentInfo() (_swig_ret VirgilByteArray)
	SetContentInfo(arg1 VirgilByteArray)
	CustomParams(a ...interface{}) interface{}
	SwigIsVirgilCipherBase()
	SwigGetVirgilCipherBase() VirgilCipherBase
}

type SwigcptrVirgilTinyCipher uintptr

func (p SwigcptrVirgilTinyCipher) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilTinyCipher) SwigIsVirgilTinyCipher() {
}

type VirgilCryptoVirgilTinyCipherPackageSize int

func _swig_getVirgilTinyCipher_PackageSize_Min_VirgilTinyCipher() (_swig_ret VirgilCryptoVirgilTinyCipherPackageSize) {
	var swig_r VirgilCryptoVirgilTinyCipherPackageSize
	swig_r = (VirgilCryptoVirgilTinyCipherPackageSize)(C._wrap_PackageSize_Min_VirgilTinyCipher_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilTinyCipherPackageSize_Min VirgilCryptoVirgilTinyCipherPackageSize = _swig_getVirgilTinyCipher_PackageSize_Min_VirgilTinyCipher()

func _swig_getVirgilTinyCipher_PackageSize_Short_SMS_VirgilTinyCipher() (_swig_ret VirgilCryptoVirgilTinyCipherPackageSize) {
	var swig_r VirgilCryptoVirgilTinyCipherPackageSize
	swig_r = (VirgilCryptoVirgilTinyCipherPackageSize)(C._wrap_PackageSize_Short_SMS_VirgilTinyCipher_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilTinyCipherPackageSize_Short_SMS VirgilCryptoVirgilTinyCipherPackageSize = _swig_getVirgilTinyCipher_PackageSize_Short_SMS_VirgilTinyCipher()

func _swig_getVirgilTinyCipher_PackageSize_Long_SMS_VirgilTinyCipher() (_swig_ret VirgilCryptoVirgilTinyCipherPackageSize) {
	var swig_r VirgilCryptoVirgilTinyCipherPackageSize
	swig_r = (VirgilCryptoVirgilTinyCipherPackageSize)(C._wrap_PackageSize_Long_SMS_VirgilTinyCipher_virgil_crypto_go_24e8eb615c27a4af())
	return swig_r
}

var VirgilTinyCipherPackageSize_Long_SMS VirgilCryptoVirgilTinyCipherPackageSize = _swig_getVirgilTinyCipher_PackageSize_Long_SMS_VirgilTinyCipher()

func NewVirgilTinyCipher__SWIG_0(arg1 uint) (_swig_ret VirgilTinyCipher) {
	var swig_r VirgilTinyCipher
	_swig_i_0 := arg1
	swig_r = (VirgilTinyCipher)(SwigcptrVirgilTinyCipher(C._wrap_new_VirgilTinyCipher__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewVirgilTinyCipher__SWIG_1() (_swig_ret VirgilTinyCipher) {
	var swig_r VirgilTinyCipher
	swig_r = (VirgilTinyCipher)(SwigcptrVirgilTinyCipher(C._wrap_new_VirgilTinyCipher__SWIG_1_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func NewVirgilTinyCipher(a ...interface{}) VirgilTinyCipher {
	argc := len(a)
	if argc == 0 {
		return NewVirgilTinyCipher__SWIG_1()
	}
	if argc == 1 {
		return NewVirgilTinyCipher__SWIG_0(a[0].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilTinyCipher) Reset() {
	_swig_i_0 := arg1
	C._wrap_VirgilTinyCipher_reset_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVirgilTinyCipher) Encrypt(arg2 VirgilByteArray, arg3 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_VirgilTinyCipher_encrypt_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrVirgilTinyCipher) EncryptAndSign__SWIG_0(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray, arg5 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	C._wrap_VirgilTinyCipher_encryptAndSign__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))
}

func (arg1 SwigcptrVirgilTinyCipher) EncryptAndSign__SWIG_1(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	C._wrap_VirgilTinyCipher_encryptAndSign__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func (p SwigcptrVirgilTinyCipher) EncryptAndSign(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		p.EncryptAndSign__SWIG_1(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
		return
	}
	if argc == 4 {
		p.EncryptAndSign__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray), a[3].(VirgilByteArray))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilTinyCipher) GetPackageCount() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_VirgilTinyCipher_getPackageCount_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilTinyCipher) GetPackage(arg2 uint) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilTinyCipher_getPackage_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVirgilTinyCipher) AddPackage(arg2 VirgilByteArray) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilTinyCipher_addPackage_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrVirgilTinyCipher) IsPackagesAccumulated() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_VirgilTinyCipher_isPackagesAccumulated_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilTinyCipher) Decrypt__SWIG_0(arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilTinyCipher_decrypt__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrVirgilTinyCipher) Decrypt__SWIG_1(arg2 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilTinyCipher_decrypt__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrVirgilTinyCipher) Decrypt(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 1 {
		return p.Decrypt__SWIG_1(a[0].(VirgilByteArray))
	}
	if argc == 2 {
		return p.Decrypt__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilTinyCipher) VerifyAndDecrypt__SWIG_0(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilTinyCipher_verifyAndDecrypt__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrVirgilTinyCipher) VerifyAndDecrypt__SWIG_1(arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilTinyCipher_verifyAndDecrypt__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrVirgilTinyCipher) VerifyAndDecrypt(a ...interface{}) VirgilByteArray {
	argc := len(a)
	if argc == 2 {
		return p.VerifyAndDecrypt__SWIG_1(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	if argc == 3 {
		return p.VerifyAndDecrypt__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func DeleteVirgilTinyCipher(arg1 VirgilTinyCipher) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilTinyCipher_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilTinyCipher interface {
	Swigcptr() uintptr
	SwigIsVirgilTinyCipher()
	Reset()
	Encrypt(arg2 VirgilByteArray, arg3 VirgilByteArray)
	EncryptAndSign(a ...interface{})
	GetPackageCount() (_swig_ret uint)
	GetPackage(arg2 uint) (_swig_ret VirgilByteArray)
	AddPackage(arg2 VirgilByteArray)
	IsPackagesAccumulated() (_swig_ret bool)
	Decrypt(a ...interface{}) VirgilByteArray
	VerifyAndDecrypt(a ...interface{}) VirgilByteArray
}

type SwigcptrVirgilByteArrayUtils uintptr

func (p SwigcptrVirgilByteArrayUtils) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilByteArrayUtils) SwigIsVirgilByteArrayUtils() {
}

func VirgilByteArrayUtilsJsonToBytes(arg1 string) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilByteArrayUtils_jsonToBytes_virgil_crypto_go_24e8eb615c27a4af(*(*C.swig_type_8)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func VirgilByteArrayUtilsStringToBytes(arg1 string) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilByteArrayUtils_stringToBytes_virgil_crypto_go_24e8eb615c27a4af(*(*C.swig_type_9)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func VirgilByteArrayUtilsBytesToString(arg1 VirgilByteArray) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1.Swigcptr()
	swig_r_p := C._wrap_VirgilByteArrayUtils_bytesToString_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func VirgilByteArrayUtilsHexToBytes(arg1 string) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilByteArrayUtils_hexToBytes_virgil_crypto_go_24e8eb615c27a4af(*(*C.swig_type_11)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func VirgilByteArrayUtilsBytesToHex__SWIG_0(arg1 VirgilByteArray, arg2 bool) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r_p := C._wrap_VirgilByteArrayUtils_bytesToHex__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func VirgilByteArrayUtilsBytesToHex__SWIG_1(arg1 VirgilByteArray) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1.Swigcptr()
	swig_r_p := C._wrap_VirgilByteArrayUtils_bytesToHex__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func VirgilByteArrayUtilsBytesToHex(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		return VirgilByteArrayUtilsBytesToHex__SWIG_1(a[0].(VirgilByteArray))
	}
	if argc == 2 {
		return VirgilByteArrayUtilsBytesToHex__SWIG_0(a[0].(VirgilByteArray), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func DeleteVirgilByteArrayUtils(arg1 VirgilByteArrayUtils) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilByteArrayUtils_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilByteArrayUtils interface {
	Swigcptr() uintptr
	SwigIsVirgilByteArrayUtils()
}

type SwigcptrVirgilPFSEncryptedMessage uintptr

func (p SwigcptrVirgilPFSEncryptedMessage) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilPFSEncryptedMessage) SwigIsVirgilPFSEncryptedMessage() {
}

func NewVirgilPFSEncryptedMessage(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilPFSEncryptedMessage) {
	var swig_r VirgilPFSEncryptedMessage
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilPFSEncryptedMessage)(SwigcptrVirgilPFSEncryptedMessage(C._wrap_new_VirgilPFSEncryptedMessage_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSEncryptedMessage) GetSessionIdentifier() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPFSEncryptedMessage_getSessionIdentifier_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSEncryptedMessage) GetSalt() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPFSEncryptedMessage_getSalt_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSEncryptedMessage) GetCipherText() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPFSEncryptedMessage_getCipherText_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteVirgilPFSEncryptedMessage(arg1 VirgilPFSEncryptedMessage) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilPFSEncryptedMessage_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilPFSEncryptedMessage interface {
	Swigcptr() uintptr
	SwigIsVirgilPFSEncryptedMessage()
	GetSessionIdentifier() (_swig_ret VirgilByteArray)
	GetSalt() (_swig_ret VirgilByteArray)
	GetCipherText() (_swig_ret VirgilByteArray)
}

type SwigcptrVirgilPFSPublicKey uintptr

func (p SwigcptrVirgilPFSPublicKey) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilPFSPublicKey) SwigIsVirgilPFSPublicKey() {
}

func NewVirgilPFSPublicKey__SWIG_0(arg1 VirgilByteArray) (_swig_ret VirgilPFSPublicKey) {
	var swig_r VirgilPFSPublicKey
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilPFSPublicKey)(SwigcptrVirgilPFSPublicKey(C._wrap_new_VirgilPFSPublicKey__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilPFSPublicKey__SWIG_1() (_swig_ret VirgilPFSPublicKey) {
	var swig_r VirgilPFSPublicKey
	swig_r = (VirgilPFSPublicKey)(SwigcptrVirgilPFSPublicKey(C._wrap_new_VirgilPFSPublicKey__SWIG_1_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func NewVirgilPFSPublicKey(a ...interface{}) VirgilPFSPublicKey {
	argc := len(a)
	if argc == 0 {
		return NewVirgilPFSPublicKey__SWIG_1()
	}
	if argc == 1 {
		return NewVirgilPFSPublicKey__SWIG_0(a[0].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilPFSPublicKey) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_VirgilPFSPublicKey_isEmpty_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSPublicKey) GetKey() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPFSPublicKey_getKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteVirgilPFSPublicKey(arg1 VirgilPFSPublicKey) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilPFSPublicKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilPFSPublicKey interface {
	Swigcptr() uintptr
	SwigIsVirgilPFSPublicKey()
	IsEmpty() (_swig_ret bool)
	GetKey() (_swig_ret VirgilByteArray)
}

type SwigcptrVirgilPFSPrivateKey uintptr

func (p SwigcptrVirgilPFSPrivateKey) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilPFSPrivateKey) SwigIsVirgilPFSPrivateKey() {
}

func NewVirgilPFSPrivateKey__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilPFSPrivateKey) {
	var swig_r VirgilPFSPrivateKey
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilPFSPrivateKey)(SwigcptrVirgilPFSPrivateKey(C._wrap_new_VirgilPFSPrivateKey__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewVirgilPFSPrivateKey__SWIG_1(arg1 VirgilByteArray) (_swig_ret VirgilPFSPrivateKey) {
	var swig_r VirgilPFSPrivateKey
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilPFSPrivateKey)(SwigcptrVirgilPFSPrivateKey(C._wrap_new_VirgilPFSPrivateKey__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilPFSPrivateKey__SWIG_2() (_swig_ret VirgilPFSPrivateKey) {
	var swig_r VirgilPFSPrivateKey
	swig_r = (VirgilPFSPrivateKey)(SwigcptrVirgilPFSPrivateKey(C._wrap_new_VirgilPFSPrivateKey__SWIG_2_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSPrivateKey) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_VirgilPFSPrivateKey_isEmpty_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSPrivateKey) GetKey() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPFSPrivateKey_getKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSPrivateKey) GetPassword() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPFSPrivateKey_getPassword_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilPFSPrivateKey__SWIG_3(arg1 VirgilPFSPrivateKey) (_swig_ret VirgilPFSPrivateKey) {
	var swig_r VirgilPFSPrivateKey
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilPFSPrivateKey)(SwigcptrVirgilPFSPrivateKey(C._wrap_new_VirgilPFSPrivateKey__SWIG_3_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilPFSPrivateKey(a ...interface{}) VirgilPFSPrivateKey {
	argc := len(a)
	if argc == 0 {
		return NewVirgilPFSPrivateKey__SWIG_2()
	}
	if argc == 1 {
		if _, ok := a[0].(SwigcptrVirgilByteArray); !ok {
			goto check_2
		}
		return NewVirgilPFSPrivateKey__SWIG_1(a[0].(VirgilByteArray))
	}
check_2:
	if argc == 1 {
		return NewVirgilPFSPrivateKey__SWIG_3(a[0].(VirgilPFSPrivateKey))
	}
	if argc == 2 {
		return NewVirgilPFSPrivateKey__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func DeleteVirgilPFSPrivateKey(arg1 VirgilPFSPrivateKey) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilPFSPrivateKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilPFSPrivateKey interface {
	Swigcptr() uintptr
	SwigIsVirgilPFSPrivateKey()
	IsEmpty() (_swig_ret bool)
	GetKey() (_swig_ret VirgilByteArray)
	GetPassword() (_swig_ret VirgilByteArray)
}

type SwigcptrVirgilPFSInitiatorPublicInfo uintptr

func (p SwigcptrVirgilPFSInitiatorPublicInfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilPFSInitiatorPublicInfo) SwigIsVirgilPFSInitiatorPublicInfo() {
}

func NewVirgilPFSInitiatorPublicInfo(arg1 VirgilPFSPublicKey, arg2 VirgilPFSPublicKey) (_swig_ret VirgilPFSInitiatorPublicInfo) {
	var swig_r VirgilPFSInitiatorPublicInfo
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilPFSInitiatorPublicInfo)(SwigcptrVirgilPFSInitiatorPublicInfo(C._wrap_new_VirgilPFSInitiatorPublicInfo_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSInitiatorPublicInfo) GetIdentityPublicKey() (_swig_ret VirgilPFSPublicKey) {
	var swig_r VirgilPFSPublicKey
	_swig_i_0 := arg1
	swig_r = (VirgilPFSPublicKey)(SwigcptrVirgilPFSPublicKey(C._wrap_VirgilPFSInitiatorPublicInfo_getIdentityPublicKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSInitiatorPublicInfo) GetEphemeralPublicKey() (_swig_ret VirgilPFSPublicKey) {
	var swig_r VirgilPFSPublicKey
	_swig_i_0 := arg1
	swig_r = (VirgilPFSPublicKey)(SwigcptrVirgilPFSPublicKey(C._wrap_VirgilPFSInitiatorPublicInfo_getEphemeralPublicKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteVirgilPFSInitiatorPublicInfo(arg1 VirgilPFSInitiatorPublicInfo) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilPFSInitiatorPublicInfo_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilPFSInitiatorPublicInfo interface {
	Swigcptr() uintptr
	SwigIsVirgilPFSInitiatorPublicInfo()
	GetIdentityPublicKey() (_swig_ret VirgilPFSPublicKey)
	GetEphemeralPublicKey() (_swig_ret VirgilPFSPublicKey)
}

type SwigcptrVirgilPFSInitiatorPrivateInfo uintptr

func (p SwigcptrVirgilPFSInitiatorPrivateInfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilPFSInitiatorPrivateInfo) SwigIsVirgilPFSInitiatorPrivateInfo() {
}

func NewVirgilPFSInitiatorPrivateInfo(arg1 VirgilPFSPrivateKey, arg2 VirgilPFSPrivateKey) (_swig_ret VirgilPFSInitiatorPrivateInfo) {
	var swig_r VirgilPFSInitiatorPrivateInfo
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilPFSInitiatorPrivateInfo)(SwigcptrVirgilPFSInitiatorPrivateInfo(C._wrap_new_VirgilPFSInitiatorPrivateInfo_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSInitiatorPrivateInfo) GetIdentityPrivateKey() (_swig_ret VirgilPFSPrivateKey) {
	var swig_r VirgilPFSPrivateKey
	_swig_i_0 := arg1
	swig_r = (VirgilPFSPrivateKey)(SwigcptrVirgilPFSPrivateKey(C._wrap_VirgilPFSInitiatorPrivateInfo_getIdentityPrivateKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSInitiatorPrivateInfo) GetEphemeralPrivateKey() (_swig_ret VirgilPFSPrivateKey) {
	var swig_r VirgilPFSPrivateKey
	_swig_i_0 := arg1
	swig_r = (VirgilPFSPrivateKey)(SwigcptrVirgilPFSPrivateKey(C._wrap_VirgilPFSInitiatorPrivateInfo_getEphemeralPrivateKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteVirgilPFSInitiatorPrivateInfo(arg1 VirgilPFSInitiatorPrivateInfo) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilPFSInitiatorPrivateInfo_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilPFSInitiatorPrivateInfo interface {
	Swigcptr() uintptr
	SwigIsVirgilPFSInitiatorPrivateInfo()
	GetIdentityPrivateKey() (_swig_ret VirgilPFSPrivateKey)
	GetEphemeralPrivateKey() (_swig_ret VirgilPFSPrivateKey)
}

type SwigcptrVirgilPFSResponderPublicInfo uintptr

func (p SwigcptrVirgilPFSResponderPublicInfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilPFSResponderPublicInfo) SwigIsVirgilPFSResponderPublicInfo() {
}

func NewVirgilPFSResponderPublicInfo__SWIG_0(arg1 VirgilPFSPublicKey, arg2 VirgilPFSPublicKey, arg3 VirgilPFSPublicKey) (_swig_ret VirgilPFSResponderPublicInfo) {
	var swig_r VirgilPFSResponderPublicInfo
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilPFSResponderPublicInfo)(SwigcptrVirgilPFSResponderPublicInfo(C._wrap_new_VirgilPFSResponderPublicInfo__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func NewVirgilPFSResponderPublicInfo__SWIG_1(arg1 VirgilPFSPublicKey, arg2 VirgilPFSPublicKey) (_swig_ret VirgilPFSResponderPublicInfo) {
	var swig_r VirgilPFSResponderPublicInfo
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilPFSResponderPublicInfo)(SwigcptrVirgilPFSResponderPublicInfo(C._wrap_new_VirgilPFSResponderPublicInfo__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewVirgilPFSResponderPublicInfo(a ...interface{}) VirgilPFSResponderPublicInfo {
	argc := len(a)
	if argc == 2 {
		return NewVirgilPFSResponderPublicInfo__SWIG_1(a[0].(VirgilPFSPublicKey), a[1].(VirgilPFSPublicKey))
	}
	if argc == 3 {
		return NewVirgilPFSResponderPublicInfo__SWIG_0(a[0].(VirgilPFSPublicKey), a[1].(VirgilPFSPublicKey), a[2].(VirgilPFSPublicKey))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilPFSResponderPublicInfo) GetIdentityPublicKey() (_swig_ret VirgilPFSPublicKey) {
	var swig_r VirgilPFSPublicKey
	_swig_i_0 := arg1
	swig_r = (VirgilPFSPublicKey)(SwigcptrVirgilPFSPublicKey(C._wrap_VirgilPFSResponderPublicInfo_getIdentityPublicKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSResponderPublicInfo) GetLongTermPublicKey() (_swig_ret VirgilPFSPublicKey) {
	var swig_r VirgilPFSPublicKey
	_swig_i_0 := arg1
	swig_r = (VirgilPFSPublicKey)(SwigcptrVirgilPFSPublicKey(C._wrap_VirgilPFSResponderPublicInfo_getLongTermPublicKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSResponderPublicInfo) GetOneTimePublicKey() (_swig_ret VirgilPFSPublicKey) {
	var swig_r VirgilPFSPublicKey
	_swig_i_0 := arg1
	swig_r = (VirgilPFSPublicKey)(SwigcptrVirgilPFSPublicKey(C._wrap_VirgilPFSResponderPublicInfo_getOneTimePublicKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteVirgilPFSResponderPublicInfo(arg1 VirgilPFSResponderPublicInfo) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilPFSResponderPublicInfo_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilPFSResponderPublicInfo interface {
	Swigcptr() uintptr
	SwigIsVirgilPFSResponderPublicInfo()
	GetIdentityPublicKey() (_swig_ret VirgilPFSPublicKey)
	GetLongTermPublicKey() (_swig_ret VirgilPFSPublicKey)
	GetOneTimePublicKey() (_swig_ret VirgilPFSPublicKey)
}

type SwigcptrVirgilPFSResponderPrivateInfo uintptr

func (p SwigcptrVirgilPFSResponderPrivateInfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilPFSResponderPrivateInfo) SwigIsVirgilPFSResponderPrivateInfo() {
}

func NewVirgilPFSResponderPrivateInfo__SWIG_0(arg1 VirgilPFSPrivateKey, arg2 VirgilPFSPrivateKey, arg3 VirgilPFSPrivateKey) (_swig_ret VirgilPFSResponderPrivateInfo) {
	var swig_r VirgilPFSResponderPrivateInfo
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilPFSResponderPrivateInfo)(SwigcptrVirgilPFSResponderPrivateInfo(C._wrap_new_VirgilPFSResponderPrivateInfo__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func NewVirgilPFSResponderPrivateInfo__SWIG_1(arg1 VirgilPFSPrivateKey, arg2 VirgilPFSPrivateKey) (_swig_ret VirgilPFSResponderPrivateInfo) {
	var swig_r VirgilPFSResponderPrivateInfo
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilPFSResponderPrivateInfo)(SwigcptrVirgilPFSResponderPrivateInfo(C._wrap_new_VirgilPFSResponderPrivateInfo__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewVirgilPFSResponderPrivateInfo(a ...interface{}) VirgilPFSResponderPrivateInfo {
	argc := len(a)
	if argc == 2 {
		return NewVirgilPFSResponderPrivateInfo__SWIG_1(a[0].(VirgilPFSPrivateKey), a[1].(VirgilPFSPrivateKey))
	}
	if argc == 3 {
		return NewVirgilPFSResponderPrivateInfo__SWIG_0(a[0].(VirgilPFSPrivateKey), a[1].(VirgilPFSPrivateKey), a[2].(VirgilPFSPrivateKey))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilPFSResponderPrivateInfo) GetIdentityPrivateKey() (_swig_ret VirgilPFSPrivateKey) {
	var swig_r VirgilPFSPrivateKey
	_swig_i_0 := arg1
	swig_r = (VirgilPFSPrivateKey)(SwigcptrVirgilPFSPrivateKey(C._wrap_VirgilPFSResponderPrivateInfo_getIdentityPrivateKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSResponderPrivateInfo) GetLongTermPrivateKey() (_swig_ret VirgilPFSPrivateKey) {
	var swig_r VirgilPFSPrivateKey
	_swig_i_0 := arg1
	swig_r = (VirgilPFSPrivateKey)(SwigcptrVirgilPFSPrivateKey(C._wrap_VirgilPFSResponderPrivateInfo_getLongTermPrivateKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSResponderPrivateInfo) GetOneTimePrivateKey() (_swig_ret VirgilPFSPrivateKey) {
	var swig_r VirgilPFSPrivateKey
	_swig_i_0 := arg1
	swig_r = (VirgilPFSPrivateKey)(SwigcptrVirgilPFSPrivateKey(C._wrap_VirgilPFSResponderPrivateInfo_getOneTimePrivateKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteVirgilPFSResponderPrivateInfo(arg1 VirgilPFSResponderPrivateInfo) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilPFSResponderPrivateInfo_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilPFSResponderPrivateInfo interface {
	Swigcptr() uintptr
	SwigIsVirgilPFSResponderPrivateInfo()
	GetIdentityPrivateKey() (_swig_ret VirgilPFSPrivateKey)
	GetLongTermPrivateKey() (_swig_ret VirgilPFSPrivateKey)
	GetOneTimePrivateKey() (_swig_ret VirgilPFSPrivateKey)
}

type SwigcptrVirgilPFSSession uintptr

func (p SwigcptrVirgilPFSSession) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilPFSSession) SwigIsVirgilPFSSession() {
}

func NewVirgilPFSSession__SWIG_0() (_swig_ret VirgilPFSSession) {
	var swig_r VirgilPFSSession
	swig_r = (VirgilPFSSession)(SwigcptrVirgilPFSSession(C._wrap_new_VirgilPFSSession__SWIG_0_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func NewVirgilPFSSession__SWIG_1(arg1 VirgilByteArray, arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray) (_swig_ret VirgilPFSSession) {
	var swig_r VirgilPFSSession
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (VirgilPFSSession)(SwigcptrVirgilPFSSession(C._wrap_new_VirgilPFSSession__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func NewVirgilPFSSession(a ...interface{}) VirgilPFSSession {
	argc := len(a)
	if argc == 0 {
		return NewVirgilPFSSession__SWIG_0()
	}
	if argc == 4 {
		return NewVirgilPFSSession__SWIG_1(a[0].(VirgilByteArray), a[1].(VirgilByteArray), a[2].(VirgilByteArray), a[3].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilPFSSession) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_VirgilPFSSession_isEmpty_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSSession) GetIdentifier() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPFSSession_getIdentifier_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSSession) GetEncryptionSecretKey() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPFSSession_getEncryptionSecretKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSSession) GetDecryptionSecretKey() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPFSSession_getDecryptionSecretKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFSSession) GetAdditionalData() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPFSSession_getAdditionalData_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteVirgilPFSSession(arg1 VirgilPFSSession) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilPFSSession_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilPFSSession interface {
	Swigcptr() uintptr
	SwigIsVirgilPFSSession()
	IsEmpty() (_swig_ret bool)
	GetIdentifier() (_swig_ret VirgilByteArray)
	GetEncryptionSecretKey() (_swig_ret VirgilByteArray)
	GetDecryptionSecretKey() (_swig_ret VirgilByteArray)
	GetAdditionalData() (_swig_ret VirgilByteArray)
}

type SwigcptrVirgilPFS uintptr

func (p SwigcptrVirgilPFS) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilPFS) SwigIsVirgilPFS() {
}

func NewVirgilPFS() (_swig_ret VirgilPFS) {
	var swig_r VirgilPFS
	swig_r = (VirgilPFS)(SwigcptrVirgilPFS(C._wrap_new_VirgilPFS_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func (arg1 SwigcptrVirgilPFS) StartInitiatorSession__SWIG_0(arg2 VirgilPFSInitiatorPrivateInfo, arg3 VirgilPFSResponderPublicInfo, arg4 VirgilByteArray) (_swig_ret VirgilPFSSession) {
	var swig_r VirgilPFSSession
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (VirgilPFSSession)(SwigcptrVirgilPFSSession(C._wrap_VirgilPFS_startInitiatorSession__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFS) StartInitiatorSession__SWIG_1(arg2 VirgilPFSInitiatorPrivateInfo, arg3 VirgilPFSResponderPublicInfo) (_swig_ret VirgilPFSSession) {
	var swig_r VirgilPFSSession
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilPFSSession)(SwigcptrVirgilPFSSession(C._wrap_VirgilPFS_startInitiatorSession__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrVirgilPFS) StartInitiatorSession(a ...interface{}) VirgilPFSSession {
	argc := len(a)
	if argc == 2 {
		return p.StartInitiatorSession__SWIG_1(a[0].(VirgilPFSInitiatorPrivateInfo), a[1].(VirgilPFSResponderPublicInfo))
	}
	if argc == 3 {
		return p.StartInitiatorSession__SWIG_0(a[0].(VirgilPFSInitiatorPrivateInfo), a[1].(VirgilPFSResponderPublicInfo), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilPFS) StartResponderSession__SWIG_0(arg2 VirgilPFSResponderPrivateInfo, arg3 VirgilPFSInitiatorPublicInfo, arg4 VirgilByteArray) (_swig_ret VirgilPFSSession) {
	var swig_r VirgilPFSSession
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (VirgilPFSSession)(SwigcptrVirgilPFSSession(C._wrap_VirgilPFS_startResponderSession__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFS) StartResponderSession__SWIG_1(arg2 VirgilPFSResponderPrivateInfo, arg3 VirgilPFSInitiatorPublicInfo) (_swig_ret VirgilPFSSession) {
	var swig_r VirgilPFSSession
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilPFSSession)(SwigcptrVirgilPFSSession(C._wrap_VirgilPFS_startResponderSession__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrVirgilPFS) StartResponderSession(a ...interface{}) VirgilPFSSession {
	argc := len(a)
	if argc == 2 {
		return p.StartResponderSession__SWIG_1(a[0].(VirgilPFSResponderPrivateInfo), a[1].(VirgilPFSInitiatorPublicInfo))
	}
	if argc == 3 {
		return p.StartResponderSession__SWIG_0(a[0].(VirgilPFSResponderPrivateInfo), a[1].(VirgilPFSInitiatorPublicInfo), a[2].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVirgilPFS) Encrypt(arg2 VirgilByteArray) (_swig_ret VirgilPFSEncryptedMessage) {
	var swig_r VirgilPFSEncryptedMessage
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilPFSEncryptedMessage)(SwigcptrVirgilPFSEncryptedMessage(C._wrap_VirgilPFS_encrypt_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFS) Decrypt(arg2 VirgilPFSEncryptedMessage) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPFS_decrypt_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFS) GetSession() (_swig_ret VirgilPFSSession) {
	var swig_r VirgilPFSSession
	_swig_i_0 := arg1
	swig_r = (VirgilPFSSession)(SwigcptrVirgilPFSSession(C._wrap_VirgilPFS_getSession_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPFS) SetSession(arg2 VirgilPFSSession) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VirgilPFS_setSession_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DeleteVirgilPFS(arg1 VirgilPFS) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilPFS_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilPFS interface {
	Swigcptr() uintptr
	SwigIsVirgilPFS()
	StartInitiatorSession(a ...interface{}) VirgilPFSSession
	StartResponderSession(a ...interface{}) VirgilPFSSession
	Encrypt(arg2 VirgilByteArray) (_swig_ret VirgilPFSEncryptedMessage)
	Decrypt(arg2 VirgilPFSEncryptedMessage) (_swig_ret VirgilByteArray)
	GetSession() (_swig_ret VirgilPFSSession)
	SetSession(arg2 VirgilPFSSession)
}

type SwigcptrVirgilPythiaBlindResult uintptr

func (p SwigcptrVirgilPythiaBlindResult) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilPythiaBlindResult) SwigIsVirgilPythiaBlindResult() {
}

func NewVirgilPythiaBlindResult__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilPythiaBlindResult) {
	var swig_r VirgilPythiaBlindResult
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilPythiaBlindResult)(SwigcptrVirgilPythiaBlindResult(C._wrap_new_VirgilPythiaBlindResult__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVirgilPythiaBlindResult) BlindedPassword() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPythiaBlindResult_blindedPassword_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPythiaBlindResult) BlindingSecret() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPythiaBlindResult_blindingSecret_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilPythiaBlindResult__SWIG_1(arg1 VirgilPythiaBlindResult) (_swig_ret VirgilPythiaBlindResult) {
	var swig_r VirgilPythiaBlindResult
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilPythiaBlindResult)(SwigcptrVirgilPythiaBlindResult(C._wrap_new_VirgilPythiaBlindResult__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilPythiaBlindResult(a ...interface{}) VirgilPythiaBlindResult {
	argc := len(a)
	if argc == 1 {
		return NewVirgilPythiaBlindResult__SWIG_1(a[0].(VirgilPythiaBlindResult))
	}
	if argc == 2 {
		return NewVirgilPythiaBlindResult__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func DeleteVirgilPythiaBlindResult(arg1 VirgilPythiaBlindResult) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilPythiaBlindResult_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilPythiaBlindResult interface {
	Swigcptr() uintptr
	SwigIsVirgilPythiaBlindResult()
	BlindedPassword() (_swig_ret VirgilByteArray)
	BlindingSecret() (_swig_ret VirgilByteArray)
}

type SwigcptrVirgilPythiaContext uintptr

func (p SwigcptrVirgilPythiaContext) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilPythiaContext) SwigIsVirgilPythiaContext() {
}

func NewVirgilPythiaContext__SWIG_0() (_swig_ret VirgilPythiaContext) {
	var swig_r VirgilPythiaContext
	swig_r = (VirgilPythiaContext)(SwigcptrVirgilPythiaContext(C._wrap_new_VirgilPythiaContext__SWIG_0_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func NewVirgilPythiaContext__SWIG_1(arg1 VirgilPythiaContext) (_swig_ret VirgilPythiaContext) {
	var swig_r VirgilPythiaContext
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilPythiaContext)(SwigcptrVirgilPythiaContext(C._wrap_new_VirgilPythiaContext__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilPythiaContext(a ...interface{}) VirgilPythiaContext {
	argc := len(a)
	if argc == 0 {
		return NewVirgilPythiaContext__SWIG_0()
	}
	if argc == 1 {
		return NewVirgilPythiaContext__SWIG_1(a[0].(VirgilPythiaContext))
	}
	panic("No match for overloaded function call")
}

func DeleteVirgilPythiaContext(arg1 VirgilPythiaContext) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilPythiaContext_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilPythiaContext interface {
	Swigcptr() uintptr
	SwigIsVirgilPythiaContext()
}

type SwigcptrVirgilPythiaTransformationKeyPair uintptr

func (p SwigcptrVirgilPythiaTransformationKeyPair) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilPythiaTransformationKeyPair) SwigIsVirgilPythiaTransformationKeyPair() {
}

func NewVirgilPythiaTransformationKeyPair__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilPythiaTransformationKeyPair) {
	var swig_r VirgilPythiaTransformationKeyPair
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilPythiaTransformationKeyPair)(SwigcptrVirgilPythiaTransformationKeyPair(C._wrap_new_VirgilPythiaTransformationKeyPair__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVirgilPythiaTransformationKeyPair) PublicKey() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPythiaTransformationKeyPair_publicKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPythiaTransformationKeyPair) PrivateKey() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPythiaTransformationKeyPair_privateKey_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilPythiaTransformationKeyPair__SWIG_1(arg1 VirgilPythiaTransformationKeyPair) (_swig_ret VirgilPythiaTransformationKeyPair) {
	var swig_r VirgilPythiaTransformationKeyPair
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilPythiaTransformationKeyPair)(SwigcptrVirgilPythiaTransformationKeyPair(C._wrap_new_VirgilPythiaTransformationKeyPair__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilPythiaTransformationKeyPair(a ...interface{}) VirgilPythiaTransformationKeyPair {
	argc := len(a)
	if argc == 1 {
		return NewVirgilPythiaTransformationKeyPair__SWIG_1(a[0].(VirgilPythiaTransformationKeyPair))
	}
	if argc == 2 {
		return NewVirgilPythiaTransformationKeyPair__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func DeleteVirgilPythiaTransformationKeyPair(arg1 VirgilPythiaTransformationKeyPair) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilPythiaTransformationKeyPair_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilPythiaTransformationKeyPair interface {
	Swigcptr() uintptr
	SwigIsVirgilPythiaTransformationKeyPair()
	PublicKey() (_swig_ret VirgilByteArray)
	PrivateKey() (_swig_ret VirgilByteArray)
}

type SwigcptrVirgilPythiaProveResult uintptr

func (p SwigcptrVirgilPythiaProveResult) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilPythiaProveResult) SwigIsVirgilPythiaProveResult() {
}

func NewVirgilPythiaProveResult__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilPythiaProveResult) {
	var swig_r VirgilPythiaProveResult
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilPythiaProveResult)(SwigcptrVirgilPythiaProveResult(C._wrap_new_VirgilPythiaProveResult__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVirgilPythiaProveResult) ProofValueC() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPythiaProveResult_proofValueC_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPythiaProveResult) ProofValueU() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPythiaProveResult_proofValueU_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilPythiaProveResult__SWIG_1(arg1 VirgilPythiaProveResult) (_swig_ret VirgilPythiaProveResult) {
	var swig_r VirgilPythiaProveResult
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilPythiaProveResult)(SwigcptrVirgilPythiaProveResult(C._wrap_new_VirgilPythiaProveResult__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilPythiaProveResult(a ...interface{}) VirgilPythiaProveResult {
	argc := len(a)
	if argc == 1 {
		return NewVirgilPythiaProveResult__SWIG_1(a[0].(VirgilPythiaProveResult))
	}
	if argc == 2 {
		return NewVirgilPythiaProveResult__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func DeleteVirgilPythiaProveResult(arg1 VirgilPythiaProveResult) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilPythiaProveResult_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilPythiaProveResult interface {
	Swigcptr() uintptr
	SwigIsVirgilPythiaProveResult()
	ProofValueC() (_swig_ret VirgilByteArray)
	ProofValueU() (_swig_ret VirgilByteArray)
}

type SwigcptrVirgilPythiaTransformResult uintptr

func (p SwigcptrVirgilPythiaTransformResult) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilPythiaTransformResult) SwigIsVirgilPythiaTransformResult() {
}

func NewVirgilPythiaTransformResult__SWIG_0(arg1 VirgilByteArray, arg2 VirgilByteArray) (_swig_ret VirgilPythiaTransformResult) {
	var swig_r VirgilPythiaTransformResult
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilPythiaTransformResult)(SwigcptrVirgilPythiaTransformResult(C._wrap_new_VirgilPythiaTransformResult__SWIG_0_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVirgilPythiaTransformResult) TransformedPassword() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPythiaTransformResult_transformedPassword_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVirgilPythiaTransformResult) TransformedTweak() (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPythiaTransformResult_transformedTweak_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilPythiaTransformResult__SWIG_1(arg1 VirgilPythiaTransformResult) (_swig_ret VirgilPythiaTransformResult) {
	var swig_r VirgilPythiaTransformResult
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilPythiaTransformResult)(SwigcptrVirgilPythiaTransformResult(C._wrap_new_VirgilPythiaTransformResult__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilPythiaTransformResult(a ...interface{}) VirgilPythiaTransformResult {
	argc := len(a)
	if argc == 1 {
		return NewVirgilPythiaTransformResult__SWIG_1(a[0].(VirgilPythiaTransformResult))
	}
	if argc == 2 {
		return NewVirgilPythiaTransformResult__SWIG_0(a[0].(VirgilByteArray), a[1].(VirgilByteArray))
	}
	panic("No match for overloaded function call")
}

func DeleteVirgilPythiaTransformResult(arg1 VirgilPythiaTransformResult) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilPythiaTransformResult_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilPythiaTransformResult interface {
	Swigcptr() uintptr
	SwigIsVirgilPythiaTransformResult()
	TransformedPassword() (_swig_ret VirgilByteArray)
	TransformedTweak() (_swig_ret VirgilByteArray)
}

type SwigcptrVirgilPythia uintptr

func (p SwigcptrVirgilPythia) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVirgilPythia) SwigIsVirgilPythia() {
}

func (arg1 SwigcptrVirgilPythia) Blind(arg2 VirgilByteArray) (_swig_ret VirgilPythiaBlindResult) {
	var swig_r VirgilPythiaBlindResult
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (VirgilPythiaBlindResult)(SwigcptrVirgilPythiaBlindResult(C._wrap_VirgilPythia_blind_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVirgilPythia) Deblind(arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPythia_deblind_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrVirgilPythia) ComputeTransformationKeyPair(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray) (_swig_ret VirgilPythiaTransformationKeyPair) {
	var swig_r VirgilPythiaTransformationKeyPair
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (VirgilPythiaTransformationKeyPair)(SwigcptrVirgilPythiaTransformationKeyPair(C._wrap_VirgilPythia_computeTransformationKeyPair_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrVirgilPythia) Transform(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray) (_swig_ret VirgilPythiaTransformResult) {
	var swig_r VirgilPythiaTransformResult
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (VirgilPythiaTransformResult)(SwigcptrVirgilPythiaTransformResult(C._wrap_VirgilPythia_transform_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrVirgilPythia) Prove(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray, arg5 VirgilPythiaTransformationKeyPair) (_swig_ret VirgilPythiaProveResult) {
	var swig_r VirgilPythiaProveResult
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (VirgilPythiaProveResult)(SwigcptrVirgilPythiaProveResult(C._wrap_VirgilPythia_prove_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrVirgilPythia) Verify(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray, arg5 VirgilByteArray, arg6 VirgilByteArray, arg7 VirgilByteArray) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	_swig_i_6 := arg7.Swigcptr()
	swig_r = (bool)(C._wrap_VirgilPythia_verify_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6)))
	return swig_r
}

func (arg1 SwigcptrVirgilPythia) GetPasswordUpdateToken(arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPythia_getPasswordUpdateToken_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrVirgilPythia) UpdateDeblindedWithToken(arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray) {
	var swig_r VirgilByteArray
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (VirgilByteArray)(SwigcptrVirgilByteArray(C._wrap_VirgilPythia_updateDeblindedWithToken_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func NewVirgilPythia__SWIG_0() (_swig_ret VirgilPythia) {
	var swig_r VirgilPythia
	swig_r = (VirgilPythia)(SwigcptrVirgilPythia(C._wrap_new_VirgilPythia__SWIG_0_virgil_crypto_go_24e8eb615c27a4af()))
	return swig_r
}

func NewVirgilPythia__SWIG_1(arg1 VirgilPythia) (_swig_ret VirgilPythia) {
	var swig_r VirgilPythia
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (VirgilPythia)(SwigcptrVirgilPythia(C._wrap_new_VirgilPythia__SWIG_1_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVirgilPythia(a ...interface{}) VirgilPythia {
	argc := len(a)
	if argc == 0 {
		return NewVirgilPythia__SWIG_0()
	}
	if argc == 1 {
		return NewVirgilPythia__SWIG_1(a[0].(VirgilPythia))
	}
	panic("No match for overloaded function call")
}

func DeleteVirgilPythia(arg1 VirgilPythia) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VirgilPythia_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0))
}

type VirgilPythia interface {
	Swigcptr() uintptr
	SwigIsVirgilPythia()
	Blind(arg2 VirgilByteArray) (_swig_ret VirgilPythiaBlindResult)
	Deblind(arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray)
	ComputeTransformationKeyPair(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray) (_swig_ret VirgilPythiaTransformationKeyPair)
	Transform(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray) (_swig_ret VirgilPythiaTransformResult)
	Prove(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray, arg5 VirgilPythiaTransformationKeyPair) (_swig_ret VirgilPythiaProveResult)
	Verify(arg2 VirgilByteArray, arg3 VirgilByteArray, arg4 VirgilByteArray, arg5 VirgilByteArray, arg6 VirgilByteArray, arg7 VirgilByteArray) (_swig_ret bool)
	GetPasswordUpdateToken(arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray)
	UpdateDeblindedWithToken(arg2 VirgilByteArray, arg3 VirgilByteArray) (_swig_ret VirgilByteArray)
}

func Virgil_pythia_blind(arg1 Pythia_buf_t, arg2 Pythia_buf_t, arg3 Pythia_buf_t) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (int)(C._wrap_virgil_pythia_blind_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func Virgil_pythia_deblind(arg1 Pythia_buf_t, arg2 Pythia_buf_t, arg3 Pythia_buf_t) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (int)(C._wrap_virgil_pythia_deblind_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func Virgil_pythia_compute_transformation_key_pair(arg1 Pythia_buf_t, arg2 Pythia_buf_t, arg3 Pythia_buf_t, arg4 Pythia_buf_t, arg5 Pythia_buf_t) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (int)(C._wrap_virgil_pythia_compute_transformation_key_pair_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4)))
	return swig_r
}

func Virgil_pythia_transform(arg1 Pythia_buf_t, arg2 Pythia_buf_t, arg3 Pythia_buf_t, arg4 Pythia_buf_t, arg5 Pythia_buf_t) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (int)(C._wrap_virgil_pythia_transform_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4)))
	return swig_r
}

func Virgil_pythia_prove(arg1 Pythia_buf_t, arg2 Pythia_buf_t, arg3 Pythia_buf_t, arg4 Pythia_buf_t, arg5 Pythia_buf_t, arg6 Pythia_buf_t, arg7 Pythia_buf_t) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	_swig_i_6 := arg7.Swigcptr()
	swig_r = (int)(C._wrap_virgil_pythia_prove_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6)))
	return swig_r
}

func Virgil_pythia_verify(arg1 Pythia_buf_t, arg2 Pythia_buf_t, arg3 Pythia_buf_t, arg4 Pythia_buf_t, arg5 Pythia_buf_t, arg6 Pythia_buf_t, arg7 *int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	_swig_i_6 := arg7
	swig_r = (int)(C._wrap_virgil_pythia_verify_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), C.swig_voidp(_swig_i_6)))
	return swig_r
}

func Virgil_pythia_get_password_update_token(arg1 Pythia_buf_t, arg2 Pythia_buf_t, arg3 Pythia_buf_t) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (int)(C._wrap_virgil_pythia_get_password_update_token_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func Virgil_pythia_update_deblinded_with_token(arg1 Pythia_buf_t, arg2 Pythia_buf_t, arg3 Pythia_buf_t) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (int)(C._wrap_virgil_pythia_update_deblinded_with_token_virgil_crypto_go_24e8eb615c27a4af(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

type SwigcptrPythia_buf_t uintptr
type Pythia_buf_t interface {
	Swigcptr() uintptr
}

func (p SwigcptrPythia_buf_t) Swigcptr() uintptr {
	return uintptr(p)
}

var swigDirectorTrack struct {
	sync.Mutex
	m map[int]interface{}
	c int
}

func swigDirectorAdd(v interface{}) int {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m == nil {
		swigDirectorTrack.m = make(map[int]interface{})
	}
	swigDirectorTrack.c++
	ret := swigDirectorTrack.c
	swigDirectorTrack.m[ret] = v
	return ret
}

func swigDirectorLookup(c int) interface{} {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	ret := swigDirectorTrack.m[c]
	if ret == nil {
		panic("C++ director pointer not found (possible	use-after-free)")
	}
	return ret
}

func swigDirectorDelete(c int) {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m[c] == nil {
		if c > swigDirectorTrack.c {
			panic("C++ director pointer invalid (possible memory corruption")
		} else {
			panic("C++ director pointer not found (possible use-after-free)")
		}
	}
	delete(swigDirectorTrack.m, c)
}
